{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/Pagination/Pagination.js\",\n    _s = $RefreshSig$();\n\n// import { Container, Pagination, Stack, PaginationItem } from \"@mui/material\";\n// import { useState, useEffect } from \"react\";\n// import * as actions from '../../redux/users/users-action'\n// import { useSelector} from \"react-redux\";\n// import * as selectors from '../../redux/users/user-selector'\n// export default function Pagination() {\n//     return (\n//     )\n// };\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Link as NavLink } from \"react-router-dom\";\nimport { Pagination, PaginationItem, TextField, Stack, Link, Button } from \"@mui/material\";\nimport { addRepositoriesSuccess } from \"../../redux/users/users-action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"https://api.github.com/search/repositories?\";\n\nconst HandlePagination = props => {\n  _s();\n\n  const [repo, setRepo] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const perPage = 20;\n  const [currentPage, setCurrentPage] = useState(''); // parseInt(props.location.search?.split(\"=\")[1] || 1)\n\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    axios.get(BASE_URL + `q=${query}&per_page=${perPage}&page=${currentPage}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setRepo(data.items);\n      setCount(data.total_count);\n      console.log(setCount); //   if (data.nbPages < currentPage) {\n      //     setCurrentPage(1);\n      //     props.history.replace(\"/\");\n      //   }\n    });\n  }, [query, currentPage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"input GitHub user name\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          value: query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => console.log('ghbdtn'),\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: [!!count && /*#__PURE__*/_jsxDEV(Pagination, {\n        count: count,\n        page: currentPage,\n        onChange: (_, num) => setCurrentPage(num),\n        showFirstButton: true,\n        showLastButton: true,\n        sx: {\n          marginY: 3,\n          marginX: \"auto\"\n        },\n        renderItem: item => /*#__PURE__*/_jsxDEV(PaginationItem, {\n          component: NavLink,\n          to: `/?page=${item.page}`,\n          ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), repo.map(repos => /*#__PURE__*/_jsxDEV(Link, {\n        href: repos.owner.url,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: repos.owner.avatar_url,\n          alt: \"dfsdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repos.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repos.stargazers_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, repos.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HandlePagination, \"hk4AN6PS5YTzBPj+1iz0DK4GWaM=\");\n\n_c = HandlePagination;\nexport default HandlePagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandlePagination\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/Pagination/Pagination.js"],"names":["axios","useState","useEffect","Link","NavLink","Pagination","PaginationItem","TextField","Stack","Button","addRepositoriesSuccess","BASE_URL","HandlePagination","props","repo","setRepo","query","setQuery","perPage","currentPage","setCurrentPage","count","setCount","get","then","data","items","total_count","console","log","_","num","marginY","marginX","item","page","map","repos","owner","url","avatar_url","name","stargazers_count","id"],"mappings":"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","sourcesContent":["// import { Container, Pagination, Stack, PaginationItem } from \"@mui/material\";\n// import { useState, useEffect } from \"react\";\n// import * as actions from '../../redux/users/users-action'\n// import { useSelector} from \"react-redux\";\n// import * as selectors from '../../redux/users/user-selector'\n\n\n// export default function Pagination() {\n\n//     return (\n        \n//     )\n// };\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Link as NavLink } from \"react-router-dom\";\nimport {\n  Pagination,\n  PaginationItem,\n  TextField,\n  Stack,\n  Link,Button,\n} from \"@mui/material\";\nimport { addRepositoriesSuccess } from \"../../redux/users/users-action\";\n\nconst BASE_URL = \"https://api.github.com/search/repositories?\";\n\nconst HandlePagination = (props) => {\nconst [repo, setRepo] = useState([]);\nconst [query, setQuery] = useState(\"\");\n    const perPage = 20;\n  const [currentPage, setCurrentPage] = useState('')\n    // parseInt(props.location.search?.split(\"=\")[1] || 1)\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n      axios.get(BASE_URL +`q=${query}&per_page=${perPage}&page=${currentPage}`).then(({ data }) => {\n      setRepo(data.items);\n          setCount(data.total_count);\n          console.log(setCount)\n              \n          \n\n    //   if (data.nbPages < currentPage) {\n    //     setCurrentPage(1);\n    //     props.history.replace(\"/\");\n    //   }\n    });\n  }, [query, currentPage]);\n\n    \n    \n  return (\n      <>\n          <form >\n            <label>\n                Name\n                <input\n                    type=\"text\"\n                    placeholder=\"input GitHub user name\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    value={query}/>\n                </label>\n                <Button   onClick={()=>console.log('ghbdtn')} type=\"submit\">Search</Button>\n        </form>\n          {/* <TextField\n        fullWidth\n        label=\"query\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      /> */}\n      <Stack spacing={2}>\n        {!!count && (\n          <Pagination\n            count={count}\n            page={currentPage}\n            onChange={(_, num) => setCurrentPage(num)}\n            showFirstButton\n            showLastButton\n            sx={{ marginY: 3, marginX: \"auto\" }}\n            renderItem={(item) => (\n              <PaginationItem\n                component={NavLink}\n                to={`/?page=${item.page}`}\n                {...item}\n              />\n            )}\n          />\n        )}\n        {repo.map((repos) => (\n          <Link key={repos.id} href={repos.owner.url}>\n                <img  src={repos.owner.avatar_url} alt='dfsdf' />\n            <p>{repos.name}</p>\n            <p>{repos.stargazers_count}</p>\n          </Link>\n        ))}\n      </Stack>\n    </>\n  );\n};\n\nexport default HandlePagination;\n\n"]},"metadata":{},"sourceType":"module"}