{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from 'react-dom';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@mui/material/Button';\nimport s from './Form.module.css';\nimport React, { useState, useEffect } from 'react';\nimport List from '../List/List';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action';\nimport { formControlUnstyledClasses } from '@mui/base';\nimport { useSelector } from \"react-redux\";\nimport * as selectors from '../../redux/users/user-selector';\nimport HomePage from '../Pagination/Pagination';\nimport { Pagination, PaginationItem, Stack, Link } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  const [data, setData] = useState({});\n  const [repo, setRepo] = useState(\"\");\n  const dispatch = useDispatch();\n  const perPage = 12; // parseInt(props.location.search?.split(\"=\")[1] || 1)\n\n  const [currentPage, setCurrentPage] = useState(1); // parseInt(props.location.search?.split(\"=\")[1] || 1)\n\n  const [count, setCount] = useState(0);\n  const pagesCount = Math.ceil(count / perPage);\n\n  const onChangeHandler = e => {\n    setRepo(e.target.value);\n  }; // useEffect(() => {\n  //   submitHandler()\n  //   return () => {\n  //   }\n  // }, [])\n\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const profile = await fetch(`https://api.github.com/search/repositories?q=${repo}&per_page=${perPage}&page=${currentPage}`);\n    const profileJson = await profile.json();\n    setCount(profileJson.total_count);\n    if (!repo) return toast.error('Please input repositories');\n    if (!repo.trim()) return toast.error('Please input repositories');\n    if (profileJson.items.length === 0) return toast.warning('Please input repositories');\n\n    if (profileJson) {\n      dispatch(actions.fetchRepositoriesSuccess(profileJson));\n    }\n\n    if (profileJson.total_count < currentPage) {\n      setCurrentPage(1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: s.form,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.label,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"input GitHub user name\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          onChange: onChangeHandler,\n          value: repo,\n          className: s.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: submitHandler,\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: !!count && /*#__PURE__*/_jsxDEV(Pagination, {\n        count: count,\n        page: currentPage,\n        onChange: (_, num) => setCurrentPage(num),\n        showFirstButton: true,\n        showLastButton: true,\n        sx: {\n          marginY: 3,\n          marginX: \"auto\"\n        },\n        renderItem: item => /*#__PURE__*/_jsxDEV(PaginationItem // component={NavLink}\n        , {\n          to: `/?page=${item.page}`,\n          ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      transition: Zoom,\n      autoClose: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Form, \"MMIUACVyDGzml9+4e7pWv61xMzY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/Form/Form.js"],"names":["ReactDOM","toast","ToastContainer","Zoom","Button","s","React","useState","useEffect","List","useDispatch","actions","formControlUnstyledClasses","useSelector","selectors","HomePage","Pagination","PaginationItem","Stack","Link","Form","data","setData","repo","setRepo","dispatch","perPage","currentPage","setCurrentPage","count","setCount","pagesCount","Math","ceil","onChangeHandler","e","target","value","submitHandler","preventDefault","profile","fetch","profileJson","json","total_count","error","trim","items","length","warning","fetchRepositoriesSuccess","form","label","input","_","num","marginY","marginX","item","page"],"mappings":"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","sourcesContent":["\n\nimport ReactDOM from 'react-dom';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@mui/material/Button';\nimport s from './Form.module.css'\nimport React, { useState,useEffect } from 'react';\nimport List from '../List/List'\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action'\nimport { formControlUnstyledClasses } from '@mui/base';\nimport { useSelector} from \"react-redux\";\nimport * as selectors from '../../redux/users/user-selector'\nimport HomePage from '../Pagination/Pagination';\nimport {\n  Pagination,\n  PaginationItem,\n  Stack,\n  Link\n} from \"@mui/material\";\n\n\nexport default function Form() {\n  const [data, setData] = useState({});\n  const [repo, setRepo] = useState(\"\");\n  const dispatch = useDispatch();\n  const perPage = 12;\n  // parseInt(props.location.search?.split(\"=\")[1] || 1)\n   const [currentPage, setCurrentPage] = useState(1)\n    // parseInt(props.location.search?.split(\"=\")[1] || 1)\n    const [count, setCount] = useState(0);\n    const pagesCount = Math.ceil(count/perPage)\n\n    \n    \n  const onChangeHandler = e => {\n    setRepo(e.target.value);\n  };\n\n  // useEffect(() => {\n  //   submitHandler()\n  //   return () => {\n      \n  //   }\n  // }, [])\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    const profile = await fetch(`https://api.github.com/search/repositories?q=${repo}&per_page=${perPage}&page=${currentPage}`);\n    const profileJson = await profile.json();\n    setCount(profileJson.total_count)\n    if (!repo) return toast.error('Please input repositories');\n    if (!repo.trim()) return toast.error('Please input repositories');\n    if (profileJson.items.length === 0) return toast.warning('Please input repositories');\n    if (profileJson) {\n      dispatch(actions.fetchRepositoriesSuccess(profileJson))\n    }\n            if (profileJson.total_count < currentPage) {\n                setCurrentPage(1)\n            }\n  }\n    return (\n    <>\n        <form className={s.form} >\n            <label className={s.label}>\n                Name\n                <input\n                    type=\"text\"\n                    placeholder=\"input GitHub user name\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n              onChange={onChangeHandler}\n                    value={repo}\n                    className={s.input} />\n                </label>\n                <Button   onClick={submitHandler} type=\"submit\">Search</Button>\n        </form>\n        \n        <Stack spacing={2}>\n        {!!count && (\n          <Pagination\n          count={count}\n          page={currentPage}\n          onChange={(_, num) => setCurrentPage(num)}\n          showFirstButton\n          showLastButton\n          sx={{ marginY: 3, marginX: \"auto\" }}\n          renderItem={(item) => (\n            <PaginationItem\n            // component={NavLink}\n            to={`/?page=${item.page}`}\n            {...item}\n            />\n            )}\n            />\n            )}\n          </Stack>\n            <List />\n\n        \n\n            <ToastContainer transition={Zoom} autoClose={3000} />\n\n            </>\n) \n};\n"]},"metadata":{},"sourceType":"module"}