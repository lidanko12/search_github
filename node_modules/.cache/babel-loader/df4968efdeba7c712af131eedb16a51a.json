{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { addRepositoriesSuccess, deleteRepositoriesSuccess, fetchRepositoriesSuccess, setCurrentPage } from './users-action';\nimport { combineReducers } from \"redux\";\nconst defaultState = {\n  items: [],\n  isFetching: true,\n  currentPage: 1,\n  perPage: 10,\n  totalCount: 0\n};\nconst items = createReducer([], {\n  [fetchRepositoriesSuccess]: (_, _ref) => {\n    let {\n      payload\n    } = _ref;\n    return [...payload];\n  },\n  [deleteRepositoriesSuccess]: (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return state.filter(_ref3 => {\n      let {\n        id\n      } = _ref3;\n      return id !== payload;\n    });\n  },\n  [addRepositoriesSuccess]: (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    return [payload, ...state];\n  }\n});\nconst currentPage = combineReducers(1, {\n  [setCurrentPage]: (_, _ref5) => {\n    let {\n      payload\n    } = _ref5;\n    return [...payload];\n  }\n});\nexport default combineReducers({\n  items,\n  currentPage\n});","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/redux/users/user-reducer.js"],"names":["createReducer","addRepositoriesSuccess","deleteRepositoriesSuccess","fetchRepositoriesSuccess","setCurrentPage","combineReducers","defaultState","items","isFetching","currentPage","perPage","totalCount","_","payload","state","filter","id"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAAQC,sBAAR,EAA+BC,yBAA/B,EAAyDC,wBAAzD,EAAmFC,cAAnF,QAAwG,gBAAxG;AACA,SAASC,eAAT,QAAgC,OAAhC;AAII,MAAMC,YAAY,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,UAAU,EAAE,IAFS;AAGrBC,EAAAA,WAAW,EAAC,CAHS;AAIrBC,EAAAA,OAAO,EAAC,EAJa;AAKrBC,EAAAA,UAAU,EAAC;AALU,CAArB;AAUJ,MAAMJ,KAAK,GAAGP,aAAa,CAAC,EAAD,EAAK;AAC5B,GAACG,wBAAD,GAA4B,CAACS,CAAD;AAAA,QAAI;AAAEC,MAAAA;AAAF,KAAJ;AAAA,WAAoB,CAAC,GAAGA,OAAJ,CAApB;AAAA,GADA;AAG5B,GAACX,yBAAD,GAA6B,CAACY,KAAD;AAAA,QAAQ;AAACD,MAAAA;AAAD,KAAR;AAAA,WAC7BC,KAAK,CAACC,MAAN,CAAa;AAAA,UAAC;AAACC,QAAAA;AAAD,OAAD;AAAA,aAAWA,EAAE,KAAKH,OAAlB;AAAA,KAAb,CAD6B;AAAA,GAHD;AAK5B,GAACZ,sBAAD,GAAyB,CAACa,KAAD;AAAA,QAAQ;AAACD,MAAAA;AAAD,KAAR;AAAA,WAAsB,CAACA,OAAD,EAAU,GAAGC,KAAb,CAAtB;AAAA;AALG,CAAL,CAA3B;AAOA,MAAML,WAAW,GAAGJ,eAAe,CAAC,CAAD,EAAI;AACnC,GAACD,cAAD,GAAiB,CAACQ,CAAD;AAAA,QAAG;AAACC,MAAAA;AAAD,KAAH;AAAA,WAAe,CAAC,GAAGA,OAAJ,CAAf;AAAA;AADkB,CAAJ,CAAnC;AAQA,eAAeR,eAAe,CAAC;AAC3BE,EAAAA,KAD2B;AAE3BE,EAAAA;AAF2B,CAAD,CAA9B","sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\nimport {addRepositoriesSuccess,deleteRepositoriesSuccess,fetchRepositoriesSuccess, setCurrentPage} from './users-action';\nimport { combineReducers } from \"redux\";\n\n\n\n    const defaultState = {\n    items: [],\n    isFetching: true,\n    currentPage:1,\n    perPage:10,\n    totalCount:0\n}\n\n\n\nconst items = createReducer([], {\n    [fetchRepositoriesSuccess]: (_, { payload }) => [...payload]\n    ,\n    [deleteRepositoriesSuccess]: (state, {payload}) =>\n    state.filter(({id} ) => id !== payload),\n    [addRepositoriesSuccess]:(state, {payload}) => [payload, ...state],\n});\nconst currentPage = combineReducers(1, {\n    [setCurrentPage]:(_,{payload})=>[...payload],\n    \n})\n\n\n\n\nexport default combineReducers({\n    items,\n    currentPage,\n})"]},"metadata":{},"sourceType":"module"}