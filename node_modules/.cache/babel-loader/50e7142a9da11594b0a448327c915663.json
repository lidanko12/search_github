{"ast":null,"code":"import axios from 'axios';\nimport { setIsFetching, setRepos } from \"../../reducers/reposReducer\";\nexport default function getRepos() {\n  let searchQuery = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"stars:%3E1\";\n  let currentPage = arguments.length > 1 ? arguments[1] : undefined;\n  let perPage = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (searchQuery === \"\") {\n    searchQuery = \"stars:%3E1\";\n  }\n\n  return async dispatch => {\n    dispatch(setIsFetching(true));\n    const response = await axios.get(`https://api.github.com/search/repositories?q=${searchQuery}&sort=stars&per_page=${perPage}&page=${currentPage}`);\n    dispatch(setRepos(response.data));\n    console.log(response.data);\n  };\n}","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/services/api.js"],"names":["axios","setIsFetching","setRepos","getRepos","searchQuery","currentPage","perPage","dispatch","response","get","data","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,QAAvB,QAAsC,6BAAtC;AAEA,eAAe,SAAUC,QAAV,GAAsE;AAAA,MAAlDC,WAAkD,uEAApC,YAAoC;AAAA,MAAtBC,WAAsB;AAAA,MAATC,OAAS;;AACjF,MAAGF,WAAW,KAAK,EAAnB,EAAuB;AACnBA,IAAAA,WAAW,GAAG,YAAd;AACH;;AACD,SAAO,MAAOG,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAACN,aAAa,CAAC,IAAD,CAAd,CAAR;AACA,UAAMO,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,gDAA+CL,WAAY,wBAAuBE,OAAQ,SAAQD,WAAY,EAAzH,CAAvB;AACAE,IAAAA,QAAQ,CAACL,QAAQ,CAACM,QAAQ,CAACE,IAAV,CAAT,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACH,GALD;AAMH","sourcesContent":["import axios from 'axios'\nimport {setIsFetching, setRepos} from \"../../reducers/reposReducer\";\n\nexport default function  getRepos (searchQuery = \"stars:%3E1\", currentPage, perPage) {\n    if(searchQuery === \"\") {\n        searchQuery = \"stars:%3E1\"\n    }\n    return async (dispatch) => {\n        dispatch(setIsFetching(true))\n        const response = await axios.get(`https://api.github.com/search/repositories?q=${searchQuery}&sort=stars&per_page=${perPage}&page=${currentPage}`)\n        dispatch(setRepos(response.data))\n        console.log(response.data)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}