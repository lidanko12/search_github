{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/Pagination/Pagination.js\",\n    _s = $RefreshSig$();\n\n// import { Container, Pagination, Stack, PaginationItem } from \"@mui/material\";\n// import { useState, useEffect } from \"react\";\n// import * as actions from '../../redux/users/users-action'\n// import { useSelector} from \"react-redux\";\n// import * as selectors from '../../redux/users/user-selector'\n// export default function Pagination() {\n//     return (\n//     )\n// };\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Link as NavLink } from \"react-router-dom\";\nimport { Pagination, PaginationItem, TextField, Stack, Link } from \"@mui/material\";\nimport { addRepositoriesSuccess } from \"../../redux/users/users-action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"https://api.github.com/search/repositories?\";\n\nconst HandlePagination = props => {\n  _s();\n\n  const [repo, setRepo] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const perPage = 20;\n  const [currentPage, setCurrentPage] = useState(1); // parseInt(props.location.search?.split(\"=\")[1] || 1)\n\n  const [count, setCount] = useState(0);\n  const pagesCount = Math.ceil(count / perPage);\n  useEffect(() => {\n    if (!query) return;\n    axios.get(BASE_URL + `q=${query}&per_page=${perPage}&page=${currentPage}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setRepo(data.items);\n      setCount(pagesCount);\n\n      if (data.total_count < currentPage) {\n        setCurrentPage(1);\n      } //   if (data.nbPages < currentPage) {\n      //     setCurrentPage(1);\n      //     props.history.replace(\"/\");\n      //   }\n\n    });\n  }, [currentPage]); // const handleSubmit = (e) => {\n  //     e.preventDefault()\n  //     axios.get(BASE_URL + `q=${query}&per_page=${perPage}&page=${currentPage}`).then(({ data }) => {\n  //         setRepo(data.items);\n  //         setCount(data.total_count);\n  //         console.log(data.total_count)\n  //     });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"query\",\n        value: query,\n        onChange: event => setQuery(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: [!!count && /*#__PURE__*/_jsxDEV(Pagination, {\n        count: count,\n        page: currentPage,\n        onChange: (_, num) => setCurrentPage(num),\n        showFirstButton: true,\n        showLastButton: true,\n        sx: {\n          marginY: 3,\n          marginX: \"auto\"\n        },\n        renderItem: item => /*#__PURE__*/_jsxDEV(PaginationItem, {\n          component: NavLink,\n          to: `/?page=${item.page}`,\n          ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), repo.map(repos => /*#__PURE__*/_jsxDEV(Link, {\n        href: repos.owner.url,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: repos.owner.avatar_url,\n          alt: \"dfsdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repos.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repos.stargazers_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, repos.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HandlePagination, \"UN4hGmFU+8cKSdvo1qsbRAGd8dg=\");\n\n_c = HandlePagination;\nexport default HandlePagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandlePagination\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/Pagination/Pagination.js"],"names":["axios","useState","useEffect","Link","NavLink","Pagination","PaginationItem","TextField","Stack","addRepositoriesSuccess","BASE_URL","HandlePagination","props","repo","setRepo","query","setQuery","perPage","currentPage","setCurrentPage","count","setCount","pagesCount","Math","ceil","get","then","data","items","total_count","handleSubmit","event","target","value","_","num","marginY","marginX","item","page","map","repos","owner","url","avatar_url","name","stargazers_count","id"],"mappings":"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","sourcesContent":["// import { Container, Pagination, Stack, PaginationItem } from \"@mui/material\";\n// import { useState, useEffect } from \"react\";\n// import * as actions from '../../redux/users/users-action'\n// import { useSelector} from \"react-redux\";\n// import * as selectors from '../../redux/users/user-selector'\n\n\n// export default function Pagination() {\n\n//     return (\n        \n//     )\n// };\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Link as NavLink } from \"react-router-dom\";\nimport {\n  Pagination,\n  PaginationItem,\n  TextField,\n  Stack,\n  Link\n} from \"@mui/material\";\nimport { addRepositoriesSuccess } from \"../../redux/users/users-action\";\n\nconst BASE_URL = \"https://api.github.com/search/repositories?\";\n\nconst HandlePagination = (props) => {\n    const [repo, setRepo] = useState([]);\n    const [query, setQuery] = useState(\"\");\n    const perPage = 20;\n    const [currentPage, setCurrentPage] = useState(1)\n    // parseInt(props.location.search?.split(\"=\")[1] || 1)\n    const [count, setCount] = useState(0);\n    const pagesCount = Math.ceil(count/perPage)\n\n\n    useEffect(() => {\n        if (!query)\n            return\n        axios.get(BASE_URL + `q=${query}&per_page=${perPage}&page=${currentPage}`).then(({ data }) => {\n            setRepo(data.items);\n            setCount(pagesCount);\n            if (data.total_count < currentPage) {\n                setCurrentPage(1)\n            }\n\n\n\n            //   if (data.nbPages < currentPage) {\n            //     setCurrentPage(1);\n            //     props.history.replace(\"/\");\n            //   }\n        });\n    }, [currentPage]);\n    // const handleSubmit = (e) => {\n    //     e.preventDefault()\n    //     axios.get(BASE_URL + `q=${query}&per_page=${perPage}&page=${currentPage}`).then(({ data }) => {\n    //         setRepo(data.items);\n    //         setCount(data.total_count);\n    //         console.log(data.total_count)\n\n    //     });\n    // };\n\n    \n\n  return (\n      <>\n          <form autoComplete='off' onSubmit={handleSubmit}>\n      <TextField\n    fullWidth\n    label=\"query\"\n    value={query}\n    onChange={(event) => setQuery(event.target.value)}\n  />\n      </form>\n      <Stack spacing={2}>\n        {!!count && (\n          <Pagination\n            count={count}\n            page={currentPage}\n            onChange={(_, num) => setCurrentPage(num)}\n            showFirstButton\n            showLastButton\n            sx={{ marginY: 3, marginX: \"auto\" }}\n            renderItem={(item) => (\n              <PaginationItem\n                component={NavLink}\n                to={`/?page=${item.page}`}\n                {...item}\n              />\n            )}\n          />\n        )}\n        {repo.map((repos) => (\n          <Link key={repos.id} href={repos.owner.url}>\n                <img  src={repos.owner.avatar_url} alt='dfsdf' />\n            <p>{repos.name}</p>\n            <p>{repos.stargazers_count}</p>\n          </Link>\n        ))}\n      </Stack>\n    </>\n  );\n};\n\nexport default HandlePagination;\n\n"]},"metadata":{},"sourceType":"module"}