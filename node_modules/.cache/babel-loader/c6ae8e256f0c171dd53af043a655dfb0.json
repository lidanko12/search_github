{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from 'react-dom';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@mui/material/Button';\nimport s from './Form.module.css';\nimport React, { useState, useEffect } from 'react';\nimport List from '../List/List';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action';\nimport { useSelector } from \"react-redux\";\nimport * as selectors from '../../redux/users/user-selector';\nimport { Link as NavLink } from 'react-router-dom';\nimport { Pagination, PaginationItem, Stack } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n\n  const pages = useSelector(selectors.getState); // const [data, setData] = useState({});\n\n  const [repo, setRepo] = useState(\"\");\n  const dispatch = useDispatch(); // const perPage = 12;\n  // parseInt(props.location.search?.split(\"=\")[1] || 1)\n  // const [currentPage, setCurrentPage] = useState(parseInt(props.location?.split(\"=\")[1] || 1))\n  // parseInt(props.location.search?.split(\"=\")[1] || 1)\n  // const [count, setCount] = useState(0);\n\n  const {\n    totalCount,\n    currentPage,\n    perPage\n  } = useSelector(_ref => {\n    let {\n      repositories\n    } = _ref;\n    return repositories.currentPage;\n  });\n\n  const onChangeHandler = e => {\n    setRepo(e.target.value);\n  };\n\n  useEffect(() => {\n    if (!repo) return;\n    getData();\n  }, [currentPage]);\n\n  const getData = async () => {\n    const profile = await fetch(`https://api.github.com/search/repositories?q=${repo}&per_page=${perPage}&page=${currentPage}`);\n    const profileJson = await profile.json(); // setCount(profileJson.total_count)\n\n    if (!repo) return toast.error('Please input repositories');\n    if (!repo.trim()) return toast.error('Please input repositories');\n    if (profileJson.items.length === 0) return toast.warning('Please input repositories');\n\n    if (profileJson) {\n      dispatch(actions.fetchRepositoriesSuccess(profileJson));\n      dispatch(actions.setCurrentPage());\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    getData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: s.form,\n      onSubmit: e => submitHandler(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.label,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"input GitHub user name\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          onChange: onChangeHandler,\n          value: repo,\n          className: s.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: !!totalCount && pages && /*#__PURE__*/_jsxDEV(Pagination, {\n        count: Math.ceil(totalCount / perPage),\n        page: currentPage,\n        onChange: (_, num) => dispatch(actions.setCurrentPage({\n          totalCount,\n          perPage,\n          num\n        })),\n        showFirstButton: true,\n        showLastButton: true,\n        sx: {\n          marginY: 3,\n          marginX: \"auto\"\n        },\n        renderItem: item => /*#__PURE__*/_jsxDEV(PaginationItem, {\n          component: NavLink,\n          to: `/search/?page=${item.page}`,\n          ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      transition: Zoom,\n      autoClose: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Form, \"9lxbsIMLTjQtgV9Md0B53wOOWJw=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Form;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/Form/Form.js"],"names":["ReactDOM","toast","ToastContainer","Zoom","Button","s","React","useState","useEffect","List","useDispatch","actions","useSelector","selectors","Link","NavLink","Pagination","PaginationItem","Stack","Form","props","pages","getState","repo","setRepo","dispatch","totalCount","currentPage","perPage","repositories","onChangeHandler","e","target","value","getData","profile","fetch","profileJson","json","error","trim","items","length","warning","fetchRepositoriesSuccess","setCurrentPage","submitHandler","preventDefault","form","label","input","Math","ceil","_","num","marginY","marginX","item","page"],"mappings":"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","sourcesContent":["\n\nimport ReactDOM from 'react-dom';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@mui/material/Button';\nimport s from './Form.module.css'\nimport React, { useState,useEffect } from 'react';\nimport List from '../List/List'\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action'\nimport { useSelector} from \"react-redux\";\nimport * as selectors from '../../redux/users/user-selector'\nimport{Link as NavLink} from 'react-router-dom'\nimport {\n  Pagination,\n  PaginationItem,\n  Stack,\n} from \"@mui/material\";\n\n\nexport default function Form(props) {\n  \n  const pages = useSelector(selectors.getState);\n  // const [data, setData] = useState({});\n  const [repo, setRepo] = useState(\"\");\n  const dispatch = useDispatch();\n  // const perPage = 12;\n  // parseInt(props.location.search?.split(\"=\")[1] || 1)\n  // const [currentPage, setCurrentPage] = useState(parseInt(props.location?.split(\"=\")[1] || 1))\n  // parseInt(props.location.search?.split(\"=\")[1] || 1)\n  // const [count, setCount] = useState(0);\n  const { totalCount, currentPage, perPage } = useSelector(({ repositories }) => repositories.currentPage);\n  \n  const onChangeHandler = e => {\n    setRepo(e.target.value);\n  };\n  useEffect(() => {\n  if (!repo)\n            return\n    getData()  \n    \n  }, [currentPage])\n\n  const getData = async () => {\n    const profile = await fetch(`https://api.github.com/search/repositories?q=${repo}&per_page=${perPage}&page=${currentPage}`);\n    const profileJson = await profile.json();\n    // setCount(profileJson.total_count)\n    if (!repo) return toast.error('Please input repositories');\n    if (!repo.trim()) return toast.error('Please input repositories');\n    if (profileJson.items.length === 0) return toast.warning('Please input repositories');\n    if (profileJson) {\n      dispatch(actions.fetchRepositoriesSuccess(profileJson))\n      dispatch(actions.setCurrentPage())\n    }\n  }\n  const submitHandler = (e) => {\n    e.preventDefault();\n    getData();\n  }\n  return (\n    <>\n        <form className={s.form} onSubmit={(e)=>submitHandler(e)}>\n            <label className={s.label}>\n                Name\n                <input\n                    type=\"text\"\n                    placeholder=\"input GitHub user name\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={onChangeHandler}\n                    value={repo}\n                    className={s.input} />\n                </label>\n                <Button  type=\"submit\">Search</Button>\n        </form>\n    <List />\n      <Stack spacing={2}>\n        {!!totalCount && pages && (\n          <Pagination\n          count={Math.ceil(totalCount/perPage)}\n          page={currentPage}\n          onChange={(_, num) => dispatch(actions.setCurrentPage({totalCount,perPage,num}))}\n          showFirstButton\n          showLastButton\n          sx={{ marginY: 3, marginX: \"auto\" }}\n          renderItem={(item) => (\n            <PaginationItem\n            component={NavLink}\n            to={`/search/?page=${item.page}`}\n            {...item}\n            />\n            )}\n            />\n            )}\n          </Stack>\n            <ToastContainer transition={Zoom} autoClose={3000} />\n\n            </>\n) \n};\n"]},"metadata":{},"sourceType":"module"}