{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/App.js\";\nimport './App.css';\nimport SearchPage from './pages/SearchPage'; //   return (\n//     <div className=\"App\">\n//           <SearchPage/>\n//     </div>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GitHubSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      userrepo: ''\n    };\n  }\n\n  getUser(username) {\n    return fetch(`https://api.github.com/users/${username}`).then(response => response.json()).then(response => {\n      return response;\n    });\n  }\n\n  getUserRepo(userrepo) {\n    return fetch(`https://api.github.com/users/${username}/repos`).then(response => response.json()).then(response => {\n      return response;\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    let user = await this.getUser(this.refs.username.value);\n    this.setState({\n      avatar_url: user.avatar_url,\n      username: user.login,\n      followers: user.followers,\n      following: user.following,\n      url: user.url\n    });\n    let repo = await this.getUserRepo(this.refs.userrepo.value);\n    this.setState({\n      name: repo.name,\n      description: repo.description,\n      git_url: repo.git_url,\n      stargazers_count: repo.stargazers_count,\n      forks_count: repo.forks_count,\n      open_issues_count: repo.open_issues_count,\n      size: repo.size\n    });\n  }\n\n  render() {\n    let user;\n\n    if (this.state.username) {\n      user = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultBadge\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.avatar_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"userInfo\",\n          children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 24\n          }, this), this.state.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"followerInfo\",\n          children: [this.state.followers, \" Followers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"followingInfo\",\n          children: [\"Following \", this.state.following, \" users\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this);\n    }\n\n    let repo;\n\n    if (this.state.userrepo) {\n      repo = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repoResults\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GitHubSearch\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"Search-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Github User Search \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.handleSubmit(e),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: \"username\",\n          type: \"text\",\n          placeholder: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Search-intro\",\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: repo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(GitHubSearch, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 110,\n  columnNumber: 17\n}, this), document.getElementById('container'));","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/App.js"],"names":["SearchPage","GitHubSearch","React","Component","constructor","props","state","username","userrepo","getUser","fetch","then","response","json","getUserRepo","handleSubmit","e","preventDefault","user","refs","value","setState","avatar_url","login","followers","following","url","repo","name","description","git_url","stargazers_count","forks_count","open_issues_count","size","render","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport SearchPage from './pages/SearchPage';\n\n\n//   return (\n//     <div className=\"App\">\n//           <SearchPage/>\n//     </div>\n//   );\n// }\n\n  class GitHubSearch extends React.Component {\n       constructor(props){ \n         super(props); \n          this.state = { \n           username: '',\n           userrepo: '',\n          };\n       }\n\n       getUser(username) {\n          return fetch(`https://api.github.com/users/${username}`)\n          .then(response => response.json())\n          .then(response => {\n            return response;\n           })\n      }\n\n       getUserRepo(userrepo) {\n         return fetch(`https://api.github.com/users/${username}/repos`)\n         .then(response => response.json())\n         .then(response => {\n          return response;\n        })\n      }\n\n       async handleSubmit(e) {\n           e.preventDefault();\n           let user = await this.getUser(this.refs.username.value);\n           this.setState({ avatar_url: user.avatar_url,\n           username: user.login,\n           followers: user.followers,\n           following: user.following,\n            url: user.url,\n       });\n\n     let repo = await this.getUserRepo(this.refs.userrepo.value);\n        this.setState({ name: repo.name,\n        description: repo.description,\n        git_url: repo.git_url,\n        stargazers_count: repo.stargazers_count,\n        forks_count: repo.forks_count,\n        open_issues_count: repo.open_issues_count,\n        size: repo.size,\n\n     })\n\n  }\n\n     render() {\n       let user;\n       if(this.state.username) {\n          user = \n          <div className=\"resultBadge\">\n            <img src={this.state.avatar_url}/>\n            <p className=\"userInfo\">\n             Username: <br/>\n             {this.state.username} \n            </p> \n            <p className=\"followerInfo\">\n             {this.state.followers} Followers\n            </p>\n            <p className=\"followingInfo\">\n              Following {this.state.following} users\n            </p>\n          </div>\n      }\n\n      let repo;\n        if(this.state.userrepo) {\n           repo =\n             <div className=\"repoResults\">\n                <p>\n                  {this.state.name}\n               </p>\n             </div>\n         }\n\n           return (\n              <div className=\"GitHubSearch\">\n                <header className=\"Search-header\">\n                  <h1>Github User Search </h1>\n                </header>\n                <form onSubmit={e => this.handleSubmit(e)}>\n                   <input ref='username' type='text' placeholder='username' />\n               </form>\n               <p className=\"Search-intro\">\n                  {user}\n               </p>\n      <p>\n        {repo}\n       </p>\n      </div>\n   );\n }\n}\n\n\nReactDOM.render(<GitHubSearch/>, document.getElementById('container'));\n"]},"metadata":{},"sourceType":"module"}