{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport combineReducers from '../users/user-reducer';\nimport logger from 'redux-logger';\nimport storage from \"redux-persist/lib/storage\";\nimport { currentPage } from \"../users/user-reducer\";\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n}), logger]; // const authPersistConfig = {\n//     key: 'auth',\n//     storage,\n//     whitelist: ['token'],\n// };\n\nconst repoPersistConfig = {\n  key: \"items\",\n  storage\n};\nexport const store = configureStore({\n  reducer: {\n    repositories: persistReducer(repoPersistConfig, combineReducers)\n  },\n  middleware,\n  devTools: true\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/search_github/src/redux/store/store.js"],"names":["configureStore","getDefaultMiddleware","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","combineReducers","logger","storage","currentPage","middleware","serializableCheck","ignoredActions","repoPersistConfig","key","store","reducer","repositories","devTools","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAGA,MAAMC,UAAU,GAAG,CACjB,GAAGb,oBAAoB,CAAC;AACtBc,EAAAA,iBAAiB,EAAE;AACnBC,IAAAA,cAAc,EAAE,CAACZ,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADG;AADG,CAAD,CADN,EAMjBE,MANiB,CAAnB,C,CASA;AACA;AACA;AACA;AACA;;AAEA,MAAMM,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAE,OADmB;AAExBN,EAAAA;AAFwB,CAA1B;AAKA,OAAO,MAAMO,KAAK,GAAGnB,cAAc,CAAC;AAClCoB,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAElB,cAAc,CAACc,iBAAD,EAAoBP,eAApB;AADrB,GADyB;AAIlCI,EAAAA,UAJkC;AAKlCQ,EAAAA,QAAQ,EAAE;AALwB,CAAD,CAA5B;AAOP,OAAO,MAAMC,SAAS,GAAGrB,YAAY,CAACiB,KAAD,CAA9B","sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport combineReducers from '../users/user-reducer'\nimport logger from 'redux-logger';\nimport storage from \"redux-persist/lib/storage\";\nimport { currentPage } from \"../users/user-reducer\";\n\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const authPersistConfig = {\n//     key: 'auth',\n//     storage,\n//     whitelist: ['token'],\n// };\n\nconst repoPersistConfig = {\n  key: \"items\",\n  storage,\n}\n\nexport const store = configureStore({\n  reducer: {\n    repositories: persistReducer(repoPersistConfig, combineReducers),\n  },\n  middleware,\n  devTools: true,\n});\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}