{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/search_github/src/components/Pagination/Pagination.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action';\nimport { useSelector } from \"react-redux\";\nimport * as selectors from '../../redux/users/user-selector';\nimport { Link as NavLink } from 'react-router-dom';\nimport { Pagination, PaginationItem, Stack } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pag() {\n  _s();\n\n  const dispatch = useDispatch();\n  const item = useSelector.return( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: !!repo && /*#__PURE__*/_jsxDEV(Pagination, {\n        count: Math.ceil(totalCount / perPage),\n        page: currentPage,\n        onChange: (_, num) => dispatch(actions.setCurrentPage({\n          perPage,\n          totalCount,\n          currentPage: num,\n          repo\n        })),\n        showFirstButton: true,\n        showLastButton: true,\n        sx: {\n          marginY: 3,\n          marginX: \"auto\"\n        },\n        renderItem: item => /*#__PURE__*/_jsxDEV(PaginationItem, {\n          component: NavLink,\n          to: `/search/?page=${item.page}`,\n          ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false));\n}\n\n_s(Pag, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Pag;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pag\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/search_github/src/components/Pagination/Pagination.js"],"names":["useDispatch","actions","useSelector","selectors","Link","NavLink","Pagination","PaginationItem","Stack","Pag","dispatch","item","return","repo","Math","ceil","totalCount","perPage","currentPage","_","num","setCurrentPage","marginY","marginX","page"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,OAAO,KAAKC,SAAZ,MAA2B,iCAA3B;AACA,SAAOC,IAAI,IAAIC,OAAf,QAA6B,kBAA7B;AACA,SACEC,UADF,EAEEC,cAFF,EAGEC,KAHF,QAIO,eAJP;;;AAOA,eAAe,SAASC,GAAT,GAAgB;AAAA;;AAE7B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACF,QAAMW,IAAI,GAAGT,WAAW,CAEtBU,MAFW,eAGT;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAA,gBACG,CAAC,CAACC,IAAF,iBACC,QAAC,UAAD;AACA,QAAA,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUC,UAAU,GAACC,OAArB,CADP;AAEA,QAAA,IAAI,EAAEC,WAFN;AAGE,QAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,GAAJ,KAAYV,QAAQ,CAACT,OAAO,CAACoB,cAAR,CAAuB;AAACJ,UAAAA,OAAD;AAASD,UAAAA,UAAT;AAAoBE,UAAAA,WAAW,EAACE,GAAhC;AAAoCP,UAAAA;AAApC,SAAvB,CAAD,CAHhC;AAIA,QAAA,eAAe,MAJf;AAKA,QAAA,cAAc,MALd;AAMA,QAAA,EAAE,EAAE;AAAES,UAAAA,OAAO,EAAE,CAAX;AAAcC,UAAAA,OAAO,EAAE;AAAvB,SANJ;AAOA,QAAA,UAAU,EAAGZ,IAAD,iBACV,QAAC,cAAD;AACA,UAAA,SAAS,EAAEN,OADX;AAEA,UAAA,EAAE,EAAG,iBAAgBM,IAAI,CAACa,IAAK,EAF/B;AAAA,aAGIb;AAHJ;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF,mBAHS,CAAb;AAyBC;;GA5BuBF,G;UAELT,W;;;KAFKS,G;AA4BvB","sourcesContent":["import { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action'\nimport { useSelector} from \"react-redux\";\nimport * as selectors from '../../redux/users/user-selector'\nimport{Link as NavLink} from 'react-router-dom'\nimport {\n  Pagination,\n  PaginationItem,\n  Stack,\n} from \"@mui/material\";\n\n\nexport default function Pag () {\n  \n  const dispatch = useDispatch();\nconst item = useSelector.  \n  \n  return (\n    <>\n      <Stack spacing={2}>\n        {!!repo&&(\n          <Pagination\n          count={Math.ceil(totalCount/perPage)}\n          page={currentPage}\n            onChange={(_, num) => dispatch(actions.setCurrentPage({perPage,totalCount,currentPage:num,repo}))}\n          showFirstButton\n          showLastButton\n          sx={{ marginY: 3, marginX: \"auto\" }}\n          renderItem={(item) => (\n            <PaginationItem\n            component={NavLink}\n            to={`/search/?page=${item.page}`}\n            {...item}\n            />\n            )}\n            />\n            )}\n          </Stack>\n            </>\n) \n};"]},"metadata":{},"sourceType":"module"}