{"ast":null,"code":"import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { addRepositoriesSuccess, deleteRepositoriesSuccess, fetchRepositoriesSuccess, setCurrentPage } from './users-action';\nimport { combineReducers } from \"redux\";\nconst items = createReducer(initialState, {\n  [fetchRepositoriesSuccess]: (_, _ref) => {\n    let {\n      payload\n    } = _ref;\n    return [...payload];\n  },\n  [deleteRepositoriesSuccess]: (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return state.filter(_ref3 => {\n      let {\n        id\n      } = _ref3;\n      return id !== payload;\n    });\n  },\n  [addRepositoriesSuccess]: (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    return [payload, ...state];\n  }\n}); // const currentPage = combineReducers(1, {\n//     [setCurrentPage]:(_,{payload})=>[...payload],\n// })\n\nconst initialState = {\n  item: [],\n  perPage: 10,\n  currentPage: 1,\n  isFetchingCurrentUser: false,\n  totalCount: 0\n}; // const page = createAction(initialState, {\n//     [setCurrentPage]:()=>[ ...state,\n//                 currentPage: action.payload]\n// })\n\nexport default combineReducers({\n  items\n});","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/redux/users/user-reducer.js"],"names":["createAction","createReducer","addRepositoriesSuccess","deleteRepositoriesSuccess","fetchRepositoriesSuccess","setCurrentPage","combineReducers","items","initialState","_","payload","state","filter","id","item","perPage","currentPage","isFetchingCurrentUser","totalCount"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AACA,SAAQC,sBAAR,EAA+BC,yBAA/B,EAAyDC,wBAAzD,EAAmFC,cAAnF,QAAwG,gBAAxG;AACA,SAASC,eAAT,QAAgC,OAAhC;AAKA,MAAMC,KAAK,GAAGN,aAAa,CAACO,YAAD,EAAe;AACtC,GAACJ,wBAAD,GAA4B,CAACK,CAAD;AAAA,QAAI;AAAEC,MAAAA;AAAF,KAAJ;AAAA,WAAoB,CAAC,GAAGA,OAAJ,CAApB;AAAA,GADU;AAGtC,GAACP,yBAAD,GAA6B,CAACQ,KAAD;AAAA,QAAQ;AAACD,MAAAA;AAAD,KAAR;AAAA,WAC7BC,KAAK,CAACC,MAAN,CAAa;AAAA,UAAC;AAACC,QAAAA;AAAD,OAAD;AAAA,aAAWA,EAAE,KAAKH,OAAlB;AAAA,KAAb,CAD6B;AAAA,GAHS;AAKtC,GAACR,sBAAD,GAAyB,CAACS,KAAD;AAAA,QAAQ;AAACD,MAAAA;AAAD,KAAR;AAAA,WAAsB,CAACA,OAAD,EAAU,GAAGC,KAAb,CAAtB;AAAA;AALa,CAAf,CAA3B,C,CAOA;AACA;AAEA;;AAEA,MAAMH,YAAY,GAAG;AACjBM,EAAAA,IAAI,EAAC,EADY;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,WAAW,EAAE,CAHI;AAIjBC,EAAAA,qBAAqB,EAAE,KAJN;AAKjBC,EAAAA,UAAU,EAAC;AALM,CAArB,C,CASA;AACA;AACA;AACA;;AAGA,eAAeZ,eAAe,CAAC;AAC3BC,EAAAA;AAD2B,CAAD,CAA9B","sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport {addRepositoriesSuccess,deleteRepositoriesSuccess,fetchRepositoriesSuccess, setCurrentPage} from './users-action';\nimport { combineReducers } from \"redux\";\n\n\n\n\nconst items = createReducer(initialState, {\n    [fetchRepositoriesSuccess]: (_, { payload }) => [...payload]\n    ,\n    [deleteRepositoriesSuccess]: (state, {payload}) =>\n    state.filter(({id} ) => id !== payload),\n    [addRepositoriesSuccess]:(state, {payload}) => [payload, ...state],\n});\n// const currentPage = combineReducers(1, {\n//     [setCurrentPage]:(_,{payload})=>[...payload],\n    \n// })\n\nconst initialState = {\n    item:[],\n    perPage: 10,\n    currentPage: 1,\n    isFetchingCurrentUser: false,\n    totalCount:0\n\n};\n\n// const page = createAction(initialState, {\n//     [setCurrentPage]:()=>[ ...state,\n//                 currentPage: action.payload]\n// })\n\n\nexport default combineReducers({\n    items,\n    \n})"]},"metadata":{},"sourceType":"module"}