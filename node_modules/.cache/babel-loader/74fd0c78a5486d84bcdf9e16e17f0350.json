{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from 'react-dom';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@mui/material/Button';\nimport s from './Form.module.css';\nimport React, { useState } from 'react';\nimport ListItem from '../ListItem/ListItem';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  // const [data, setData] = useState({});\n  const [username, setUsername] = useState(\"\");\n  const [repositories, setRepositories] = useState([]);\n  const dispatch = useDispatch();\n\n  const onChangeHandler = e => {\n    setUsername(e.target.value);\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const profile = await fetch(`https://api.github.com/search/repositories?q=` + username);\n    const profileJson = await profile.json();\n\n    if (profileJson) {\n      // setData(profileJson);\n      dispatch(actions.fetchRepositoriesSuccess(profileJson));\n      console.log(profileJson);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: s.form,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.label,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"input GitHub user name\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          onChange: onChangeHandler // value={user}\n          ,\n          className: s.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: submitHandler,\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      transition: Zoom,\n      autoClose: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Form, \"APrvdd0MXv7v2QmvRRo9YuATsmU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/Form/Form.js"],"names":["ReactDOM","toast","ToastContainer","Zoom","Button","s","React","useState","ListItem","useDispatch","actions","Form","username","setUsername","repositories","setRepositories","dispatch","onChangeHandler","e","target","value","submitHandler","preventDefault","profile","fetch","profileJson","json","fetchRepositoriesSuccess","console","log","form","label","input"],"mappings":";;;AAEA,OAAOA,QAAP,MAAqB,WAArB;AACA,SAASC,KAAT,EAAgBC,cAAhB,EAAgCC,IAAhC,QAA4C,gBAA5C;AACA,OAAO,uCAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,CAAP,MAAc,mBAAd;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMS,QAAQ,GAAGP,WAAW,EAA5B;;AAGE,QAAMQ,eAAe,GAAGC,CAAC,IAAI;AAC7BL,IAAAA,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFC;;AAIF,QAAMC,aAAa,GAAG,MAAMH,CAAN,IAAW;AAC/BA,IAAAA,CAAC,CAACI,cAAF;AAEA,UAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,+CAAD,GAAkDZ,QAAnD,CAA3B;AACA,UAAMa,WAAW,GAAG,MAAMF,OAAO,CAACG,IAAR,EAA1B;;AAEA,QAAID,WAAJ,EAAiB;AACf;AACAT,MAAAA,QAAQ,CAACN,OAAO,CAACiB,wBAAR,CAAiCF,WAAjC,CAAD,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACD;AACF,GAXD;;AAYE,sBACA;AAAA,4BACI;AAAM,MAAA,SAAS,EAAEpB,CAAC,CAACyB,IAAnB;AAAA,8BACI;AAAO,QAAA,SAAS,EAAEzB,CAAC,CAAC0B,KAApB;AAAA,wCAEI;AACQ,UAAA,IAAI,EAAC,MADb;AAEQ,UAAA,WAAW,EAAC,wBAFpB;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,OAAO,EAAC,wHAJZ;AAKI,UAAA,KAAK,EAAC,icALV;AAMI,UAAA,QAAQ,MANZ;AAOI,UAAA,QAAQ,EAAEd,eAPd,CAQI;AARJ;AASI,UAAA,SAAS,EAAEZ,CAAC,CAAC2B;AATjB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAcQ,QAAC,MAAD;AAAS,QAAA,OAAO,EAAEX,aAAlB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAiBoB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAjBpB,eAmBQ,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAElB,IAA5B;AAAkC,MAAA,SAAS,EAAE;AAA7C;AAAA;AAAA;AAAA;AAAA,YAnBR;AAAA,kBADA;AAwBH;;GAhDuBQ,I;UAKLF,W;;;KALKE,I;AAgDvB","sourcesContent":["\n\nimport ReactDOM from 'react-dom';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@mui/material/Button';\nimport s from './Form.module.css'\nimport React, { useState, } from 'react';\nimport ListItem from '../ListItem/ListItem'\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action'\n\nexport default function Form() {\n   \n  // const [data, setData] = useState({});\n  const [username, setUsername] = useState(\"\");\n  const [repositories, setRepositories] = useState([]);\n  const dispatch = useDispatch();\n    \n    \n    const onChangeHandler = e => {\n    setUsername(e.target.value);\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    const profile = await fetch(`https://api.github.com/search/repositories?q=` + username);\n    const profileJson = await profile.json();\n    \n    if (profileJson) {\n      // setData(profileJson);\n      dispatch(actions.fetchRepositoriesSuccess(profileJson))\n      console.log(profileJson)\n    }\n  };\n    return (\n    <>\n        <form className={s.form} >\n            <label className={s.label}>\n                Name\n                <input\n                        type=\"text\"\n                        placeholder=\"input GitHub user name\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={onChangeHandler}\n                    // value={user}\n                    className={s.input} />\n                </label>\n                <Button  onClick={submitHandler} type=\"submit\">Search</Button>\n            </form>\n                        <ListItem />\n\n            <ToastContainer transition={Zoom} autoClose={3000} />\n\n            </>\n) \n};\n"]},"metadata":{},"sourceType":"module"}