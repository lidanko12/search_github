{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/pages/MoreInformation.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MoreInfo() {\n  _s();\n\n  const [repo, setRepo] = useState({});\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    (async () => {\n      const fetchRepo = await fetch(`https://api.github.com/repositories/${id}`);\n\n      if (fetchRepo) {\n        const repoJson = await fetchRepo.json();\n        setRepo(repoJson);\n        console.log(repo);\n      }\n    })();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: repo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: repo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: repo.owner.avatar_url,\n        alt: repo.owner.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: repo.owner.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: repo.owner.url,\n        children: \"link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: repo.owner.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(MoreInfo, \"JOa7LXXIa4MKvE0zVwgTsVuRcjk=\", false, function () {\n  return [useParams];\n});\n\n_c = MoreInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoreInfo\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/pages/MoreInformation.js"],"names":["useParams","useState","useEffect","MoreInfo","repo","setRepo","id","fetchRepo","fetch","repoJson","json","console","log","name","owner","avatar_url","login","url"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAASN,SAAS,EAAxB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMK,SAAS,GAAG,MAAMC,KAAK,CAC1B,uCAAsCF,EAAG,EADf,CAA7B;;AAGA,UAAIC,SAAJ,EAAe;AACb,cAAME,QAAQ,GAAG,MAAMF,SAAS,CAACG,IAAV,EAAvB;AACAL,QAAAA,OAAO,CAACI,QAAD,CAAP;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD;AACF,KATD;AAUD,GAXQ,EAWN,CAACE,EAAD,CAXM,CAAT;AAYA,sBACE;AAAA,cACGF,IAAI,iBACH;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAET,IAAI,CAACU,KAAL,CAAWC,UAArB;AAAiC,QAAA,GAAG,EAAEX,IAAI,CAACU,KAAL,CAAWE;AAAjD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAIZ,IAAI,CAACU,KAAL,CAAWE;AAAf;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAG,QAAA,IAAI,EAAEZ,IAAI,CAACU,KAAL,CAAWG,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,kBAAIb,IAAI,CAACU,KAAL,CAAWE;AAAf;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAaD;;GA7BuBb,Q;UAEPH,S;;;KAFOG,Q","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nexport default function MoreInfo() {\n  const [repo, setRepo] = useState({});\n  const { id } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      const fetchRepo = await fetch(\n        `https://api.github.com/repositories/${id}`\n      );\n      if (fetchRepo) {\n        const repoJson = await fetchRepo.json();\n        setRepo(repoJson);\n        console.log(repo);\n      }\n    })();\n  }, [id]);\n  return (\n    <>\n      {repo && (\n        <div>\n          <h1>{repo.name}</h1>\n          <img src={repo.owner.avatar_url} alt={repo.owner.login}></img>\n          <p>{repo.owner.login}</p>\n          <a href={repo.owner.url}>link</a>\n          <p>{repo.owner.login}</p>\n        </div>\n      )}\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}