{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/RepoCard/RepoCard.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport s from './RepoCard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RepoCard() {\n  _s();\n\n  const [repo, setRepo] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    (async () => {\n      const fetchRepo = await fetch(`https://api.github.com/repositories/${id}`);\n\n      if (fetchRepo) {\n        const repoJson = await fetchRepo.json();\n        setRepo(repoJson);\n      }\n    })();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: repo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" Name \", repo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.thumb,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: repo.owner.avatar_url,\n          alt: repo.owner.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: s.desc,\n        children: [\"Login \", repo.owner.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        href: repo.owner.url,\n        children: \"link \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: s.desc,\n        children: repo.owner.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: s.desc,\n        children: repo.html_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"DeScription\", repo.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: s.desc,\n        children: [\"Date:\", repo.created_at.split('T').shift()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(RepoCard, \"9XikkopTkW1x6cd9GERlV2FVmmo=\", false, function () {\n  return [useParams];\n});\n\n_c = RepoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepoCard\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/components/RepoCard/RepoCard.js"],"names":["useParams","useState","useEffect","s","RepoCard","repo","setRepo","id","fetchRepo","fetch","repoJson","json","container","name","thumb","owner","avatar_url","login","desc","url","html_url","description","created_at","split","shift"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,CAAP,MAAc,uBAAd;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASP,SAAS,EAAxB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMM,SAAS,GAAG,MAAMC,KAAK,CAC1B,uCAAsCF,EAAG,EADf,CAA7B;;AAGA,UAAIC,SAAJ,EAAe;AACb,cAAME,QAAQ,GAAG,MAAMF,SAAS,CAACG,IAAV,EAAvB;AACAL,QAAAA,OAAO,CAACI,QAAD,CAAP;AACD;AACF,KARD;AASD,GAVQ,EAUN,CAACH,EAAD,CAVM,CAAT;AAWA,sBACE;AAAA,cACOF,IAAI,iBAEP;AAAK,MAAA,SAAS,EAAEF,CAAC,CAACS,SAAlB;AAAA,8BACU;AAAA,6BAAWP,IAAI,CAACQ,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADV,eAEU;AAAK,QAAA,SAAS,EAAEV,CAAC,CAACW,KAAlB;AAAA,+BACR;AAAK,UAAA,GAAG,EAAET,IAAI,CAACU,KAAL,CAAWC,UAArB;AAAiC,UAAA,GAAG,EAAEX,IAAI,CAACU,KAAL,CAAWE;AAAjD;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,cAFV,eAKE;AAAG,QAAA,SAAS,EAAEd,CAAC,CAACe,IAAhB;AAAA,6BAA6Bb,IAAI,CAACU,KAAL,CAAWE,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAG,QAAA,GAAG,EAAC,qBAAP;AAA6B,QAAA,MAAM,EAAC,QAApC;AAA6C,QAAA,IAAI,EAAEZ,IAAI,CAACU,KAAL,CAAWI,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOI;AAAG,QAAA,SAAS,EAAEhB,CAAC,CAACe,IAAhB;AAAA,kBAAuBb,IAAI,CAACU,KAAL,CAAWE;AAAlC;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAG,QAAA,SAAS,EAAEd,CAAC,CAACe,IAAhB;AAAA,kBAAuBb,IAAI,CAACe;AAA5B;AAAA;AAAA;AAAA;AAAA,cARJ,eAS4B;AAAA,kCAAgBf,IAAI,CAACgB,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAT5B,eAUI;AAAG,QAAA,SAAS,EAAElB,CAAC,CAACe,IAAhB;AAAA,4BAA6Bb,IAAI,CAACiB,UAAL,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,KAA3B,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,mBADF;AAoBD;;GAnCuBpB,Q;UAEPJ,S;;;KAFOI,Q","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport s from './RepoCard.module.css'\n\nexport default function RepoCard() {\n  const [repo, setRepo] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      const fetchRepo = await fetch(\n        `https://api.github.com/repositories/${id}`\n      );\n      if (fetchRepo) {\n        const repoJson = await fetchRepo.json();\n        setRepo(repoJson);\n      }\n    })();\n  }, [id]);\n  return (\n    <>\n          {repo && (\n              \n        <div className={s.container}>\n                  <h2> Name {repo.name}</h2>\n                  <div className={s.thumb}>\n          <img src={repo.owner.avatar_url} alt={repo.owner.login}></img>\n                  </div>\n          <p className={s.desc}>Login {repo.owner.login}</p>\n          <a rel=\"noopener noreferrer\" target=\"_blank\" href={repo.owner.url}>link </a>\n            <p className={s.desc}>{repo.owner.login}</p>\n            <p className={s.desc}>{repo.html_url}</p>\n                                    <p>DeScription{ repo.description}</p>\n            <p className={s.desc}>Date:{ repo.created_at.split('T').shift()}</p>\n\n        </div>\n      )}\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}