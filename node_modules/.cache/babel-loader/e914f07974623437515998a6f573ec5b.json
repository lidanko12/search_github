{"ast":null,"code":"import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { addRepositoriesSuccess, deleteRepositoriesSuccess, fetchRepositoriesSuccess, setCurrentPage } from './users-action';\nimport { combineReducers } from \"redux\";\nconst initialState = {\n  perPage: 10,\n  currentPage: 1,\n  totalCount: 500\n};\nconst items = createReducer([], {\n  [fetchRepositoriesSuccess]: (_, _ref) => {\n    let {\n      payload\n    } = _ref;\n    return [...payload];\n  },\n  [deleteRepositoriesSuccess]: (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return state.filter(_ref3 => {\n      let {\n        id\n      } = _ref3;\n      return id !== payload;\n    });\n  },\n  [addRepositoriesSuccess]: (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    return [payload, ...state];\n  },\n  [setCurrentPage]: (_, _ref5) => {\n    let {\n      payload\n    } = _ref5;\n    return [...payload];\n  }\n}); // const currentPage = createReducer(initialState, {\n// [setCurrentPage]:(_,{payload})=>[...payload],\n// })\n// export { currentPage };\n\nexport default combineReducers({\n  items\n});","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/redux/users/user-reducer.js"],"names":["createAction","createReducer","addRepositoriesSuccess","deleteRepositoriesSuccess","fetchRepositoriesSuccess","setCurrentPage","combineReducers","initialState","perPage","currentPage","totalCount","items","_","payload","state","filter","id"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AACA,SAAQC,sBAAR,EAA+BC,yBAA/B,EAAyDC,wBAAzD,EAAmFC,cAAnF,QAAwG,gBAAxG;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,WAAW,EAAE,CAFI;AAGjBC,EAAAA,UAAU,EAAC;AAHM,CAArB;AAQA,MAAMC,KAAK,GAAGV,aAAa,CAAC,EAAD,EAAK;AAC5B,GAACG,wBAAD,GAA4B,CAACQ,CAAD;AAAA,QAAI;AAAEC,MAAAA;AAAF,KAAJ;AAAA,WAAoB,CAAC,GAAGA,OAAJ,CAApB;AAAA,GADA;AAG5B,GAACV,yBAAD,GAA6B,CAACW,KAAD;AAAA,QAAQ;AAACD,MAAAA;AAAD,KAAR;AAAA,WAC7BC,KAAK,CAACC,MAAN,CAAa;AAAA,UAAC;AAACC,QAAAA;AAAD,OAAD;AAAA,aAAWA,EAAE,KAAKH,OAAlB;AAAA,KAAb,CAD6B;AAAA,GAHD;AAK5B,GAACX,sBAAD,GAA0B,CAACY,KAAD;AAAA,QAAQ;AAAED,MAAAA;AAAF,KAAR;AAAA,WAAwB,CAACA,OAAD,EAAU,GAAGC,KAAb,CAAxB;AAAA,GALE;AAM5B,GAACT,cAAD,GAAiB,CAACO,CAAD;AAAA,QAAG;AAACC,MAAAA;AAAD,KAAH;AAAA,WAAe,CAAC,GAAGA,OAAJ,CAAf;AAAA;AANW,CAAL,CAA3B,C,CAQA;AACI;AAEJ;AAEA;;AAEA,eAAeP,eAAe,CAAC;AAC3BK,EAAAA;AAD2B,CAAD,CAA9B","sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport {addRepositoriesSuccess,deleteRepositoriesSuccess,fetchRepositoriesSuccess, setCurrentPage} from './users-action';\nimport { combineReducers } from \"redux\";\n\nconst initialState = {\n    perPage: 10,\n    currentPage: 1,\n    totalCount:500,\n\n};\n\n\nconst items = createReducer([], {\n    [fetchRepositoriesSuccess]: (_, { payload }) => [...payload]\n    ,\n    [deleteRepositoriesSuccess]: (state, {payload}) =>\n    state.filter(({id} ) => id !== payload),\n    [addRepositoriesSuccess]: (state, { payload }) => [payload, ...state],\n    [setCurrentPage]:(_,{payload})=>[...payload],\n});\n// const currentPage = createReducer(initialState, {\n    // [setCurrentPage]:(_,{payload})=>[...payload],\n    \n// })\n\n// export { currentPage };\n\nexport default combineReducers({\n    items,\n    \n    \n})"]},"metadata":{},"sourceType":"module"}