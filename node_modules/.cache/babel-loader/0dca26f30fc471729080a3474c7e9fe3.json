{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport { fontSize } from '@mui/system';\nimport { is } from '@reduxjs/toolkit/node_modules/immer/dist/internal';\nimport React, { useState, useEffect } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainPage() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const styles = useSpring({\n    loop: true,\n    to: [{\n      opacity: 1,\n      color: '#ffaaee'\n    }, {\n      opacity: 0,\n      color: 'rgb(14,26,19)'\n    }],\n    from: {\n      opacity: 0,\n      color: 'red'\n    }\n  });\n  useEffect(() => {\n    // Wait for 3 seconds\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 3000);\n  }, []); // ...\n\n  return !!isLoading && /*#__PURE__*/_jsxDEV(animated.h1, {\n    style: {\n      textAlign: 'center',\n      fontSize: '40px',\n      ...styles\n    },\n    children: \"Baran Alexander\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 25\n  }, this);\n}\n\n_s(MainPage, \"gQ2PEYef4THSzHSYLttCua16NS8=\", false, function () {\n  return [useSpring];\n});\n\n_c = MainPage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/pages/MainPage.js"],"names":["fontSize","is","React","useState","useEffect","useSpring","animated","MainPage","isLoading","setIsLoading","styles","loop","to","opacity","color","from","setTimeout","textAlign"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,EAAT,QAAmB,mDAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMO,MAAM,GAAGL,SAAS,CAAC;AACxBM,IAAAA,IAAI,EAAE,IADkB;AAExBC,IAAAA,EAAE,EAAE,CACH;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB,KADG,EAEH;AAAED,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFG,CAFoB;AAMxBC,IAAAA,IAAI,EAAE;AAAEF,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB;AANkB,GAAD,CAAxB;AAQAV,EAAAA,SAAS,CAAC,MAAM;AAEf;AACAY,IAAAA,UAAU,CAAC,MAAM;AAChBP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,KAFS,EAEP,IAFO,CAAV;AAGA,GANQ,EAMN,EANM,CAAT,CAXkC,CAmBlC;;AACA,SAAQ,CAAC,CAACD,SAAF,iBAAe,QAAC,QAAD,CAAU,EAAV;AAAa,IAAA,KAAK,EAAE;AAACS,MAAAA,SAAS,EAAC,QAAX;AAAsBjB,MAAAA,QAAQ,EAAC,MAA/B;AAAsC,SAAGU;AAAzC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAvB;AACA;;GArBuBH,Q;UAGRF,S;;;KAHQE,Q;AAqBvB","sourcesContent":["import { fontSize } from '@mui/system';\nimport { is } from '@reduxjs/toolkit/node_modules/immer/dist/internal';\nimport React, { useState, useEffect } from 'react';\n\nimport { useSpring, animated } from 'react-spring'\n\nexport default function MainPage() {\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tconst styles = useSpring({\n\t\tloop: true,\n\t\tto: [\n\t\t\t{ opacity: 1, color: '#ffaaee' },\n\t\t\t{ opacity: 0, color: 'rgb(14,26,19)' },\n\t\t],\n\t\tfrom: { opacity: 0, color: 'red' },\n\t})\n\tuseEffect(() => {\n\n\t\t// Wait for 3 seconds\n\t\tsetTimeout(() => {\n\t\t\tsetIsLoading(false);\n\t\t}, 3000);\n\t}, []);\n\n\t// ...\n\treturn (!!isLoading && <animated.h1 style={{textAlign:'center' , fontSize:'40px',...styles}}>Baran Alexander</animated.h1>)\n};\n\n\n"]},"metadata":{},"sourceType":"module"}