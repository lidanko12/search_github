{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { addRepositoriesSuccess, deleteRepositoriesSuccess, fetchRepositoriesSuccess } from './users-action';\nimport { combineReducers } from \"redux\";\nconst items = createReducer([], {\n  [fetchRepositoriesSuccess]: (_, _ref) => {\n    let {\n      payload\n    } = _ref;\n    return [...payload];\n  },\n  [deleteRepositoriesSuccess]: (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return state.filter(id => id !== payload);\n  },\n  [addRepositoriesSuccess]: (state, _ref3) => {\n    let {\n      payload\n    } = _ref3;\n    return [payload, ...state];\n  }\n});\nexport default combineReducers({\n  items\n});","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/redux/users/user-reducer.js"],"names":["createReducer","addRepositoriesSuccess","deleteRepositoriesSuccess","fetchRepositoriesSuccess","combineReducers","items","_","payload","state","filter","id"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAAQC,sBAAR,EAA+BC,yBAA/B,EAAyDC,wBAAzD,QAAwF,gBAAxF;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,KAAK,GAAGL,aAAa,CAAC,EAAD,EAAK;AAC5B,GAACG,wBAAD,GAA4B,CAACG,CAAD;AAAA,QAAI;AAAEC,MAAAA;AAAF,KAAJ;AAAA,WAAoB,CAAC,GAAGA,OAAJ,CAApB;AAAA,GADA;AAG5B,GAACL,yBAAD,GAA6B,CAACM,KAAD;AAAA,QAAQ;AAACD,MAAAA;AAAD,KAAR;AAAA,WAC7BC,KAAK,CAACC,MAAN,CAAcC,EAAD,IAASA,EAAE,KAAKH,OAA7B,CAD6B;AAAA,GAHD;AAK5B,GAACN,sBAAD,GAAyB,CAACO,KAAD;AAAA,QAAQ;AAACD,MAAAA;AAAD,KAAR;AAAA,WAAsB,CAACA,OAAD,EAAU,GAAGC,KAAb,CAAtB;AAAA;AALG,CAAL,CAA3B;AAYA,eAAeJ,eAAe,CAAC;AAC3BC,EAAAA;AAD2B,CAAD,CAA9B","sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\nimport {addRepositoriesSuccess,deleteRepositoriesSuccess,fetchRepositoriesSuccess} from './users-action';\nimport { combineReducers } from \"redux\";\n\nconst items = createReducer([], {\n    [fetchRepositoriesSuccess]: (_, { payload }) => [...payload]\n    ,\n    [deleteRepositoriesSuccess]: (state, {payload}) =>\n    state.filter((id ) => id !== payload),\n    [addRepositoriesSuccess]:(state, {payload}) => [payload, ...state],\n});\n\n\n\n\n\nexport default combineReducers({\n    items,\n})"]},"metadata":{},"sourceType":"module"}