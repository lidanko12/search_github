{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aleksandrbaran/Desktop/Repo/React/search_github/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/aleksandrbaran/Desktop/Repo/React/search_github/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/aleksandrbaran/Desktop/Repo/React/search_github/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useParams}from'react-router-dom';import{useState,useEffect}from'react';import s from'./RepoCard.module.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function RepoCard(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),repo=_useState2[0],setRepo=_useState2[1];var _useParams=useParams(),id=_useParams.id;useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var fetchRepo,repoJson;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://api.github.com/repositories/\".concat(id));case 2:fetchRepo=_context.sent;if(!fetchRepo){_context.next=8;break;}_context.next=6;return fetchRepo.json();case 6:repoJson=_context.sent;setRepo(repoJson);case 8:case\"end\":return _context.stop();}}},_callee);}))();},[id]);return/*#__PURE__*/_jsx(_Fragment,{children:repo&&/*#__PURE__*/_jsxs(\"div\",{className:s.container,children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\" Name --\",repo.name]}),/*#__PURE__*/_jsx(\"div\",{className:s.thumb,children:/*#__PURE__*/_jsx(\"img\",{src:repo.owner.avatar_url,alt:repo.owner.login})}),/*#__PURE__*/_jsxs(\"p\",{className:s.desc,children:[\"Login-- \",repo.owner.login]}),/*#__PURE__*/_jsx(\"a\",{className:s.link,rel:\"noopener noreferrer\",target:\"_blank\",href:repo.owner.url,children:\"link \"}),/*#__PURE__*/_jsx(\"p\",{className:s.desc,children:repo.html_url}),/*#__PURE__*/_jsxs(\"p\",{className:s.desc,children:[\"Description-- \",repo.description]}),/*#__PURE__*/_jsxs(\"p\",{className:s.desc,children:[\"Date: \",repo.created_at.split('T').shift()]})]})});}","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/search_github/src/components/RepoCard/RepoCard.js"],"names":["useParams","useState","useEffect","s","RepoCard","repo","setRepo","id","fetch","fetchRepo","json","repoJson","container","name","thumb","owner","avatar_url","login","desc","link","url","html_url","description","created_at","split","shift"],"mappings":"wZAAA,OAASA,SAAT,KAA0B,kBAA1B,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,CAAP,KAAc,uBAAd,C,6IAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,cAAwBH,QAAQ,CAAC,IAAD,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eACA,eAAeN,SAAS,EAAxB,CAAQO,EAAR,YAAQA,EAAR,CAEAL,SAAS,CAAC,UAAM,CACd,wDAAC,gLACyBM,CAAAA,KAAK,+CACYD,EADZ,EAD9B,QACOE,SADP,mBAIKA,SAJL,+CAK0BA,CAAAA,SAAS,CAACC,IAAV,EAL1B,QAKSC,QALT,eAMGL,OAAO,CAACK,QAAD,CAAP,CANH,sDAAD,KASD,CAVQ,CAUN,CAACJ,EAAD,CAVM,CAAT,CAWA,mBACE,yBACOF,IAAI,eAEP,aAAK,SAAS,CAAEF,CAAC,CAACS,SAAlB,wBACU,iCAAaP,IAAI,CAACQ,IAAlB,GADV,cAEU,YAAK,SAAS,CAAEV,CAAC,CAACW,KAAlB,uBACR,YAAK,GAAG,CAAET,IAAI,CAACU,KAAL,CAAWC,UAArB,CAAiC,GAAG,CAAEX,IAAI,CAACU,KAAL,CAAWE,KAAjD,EADQ,EAFV,cAKE,WAAG,SAAS,CAAEd,CAAC,CAACe,IAAhB,sBAA+Bb,IAAI,CAACU,KAAL,CAAWE,KAA1C,GALF,cAME,UAAG,SAAS,CAAEd,CAAC,CAACgB,IAAhB,CAAuB,GAAG,CAAC,qBAA3B,CAAiD,MAAM,CAAC,QAAxD,CAAiE,IAAI,CAAEd,IAAI,CAACU,KAAL,CAAWK,GAAlF,mBANF,cAOI,UAAG,SAAS,CAAEjB,CAAC,CAACe,IAAhB,UAAuBb,IAAI,CAACgB,QAA5B,EAPJ,cAQI,WAAG,SAAS,CAAElB,CAAC,CAACe,IAAhB,4BAAqCb,IAAI,CAACiB,WAA1C,GARJ,cASI,WAAG,SAAS,CAAEnB,CAAC,CAACe,IAAhB,oBAA8Bb,IAAI,CAACkB,UAAL,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,KAA3B,EAA9B,GATJ,GAHJ,EADF,CAmBD","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport s from './RepoCard.module.css'\n\nexport default function RepoCard() {\n  const [repo, setRepo] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      const fetchRepo = await fetch(\n        `https://api.github.com/repositories/${id}`\n      );\n      if (fetchRepo) {\n        const repoJson = await fetchRepo.json();\n        setRepo(repoJson);\n      }\n    })();\n  }, [id]);\n  return (\n    <>\n          {repo && (\n              \n        <div className={s.container}>\n                  <h2> Name --{repo.name}</h2>\n                  <div className={s.thumb}>\n          <img src={repo.owner.avatar_url} alt={repo.owner.login}></img>\n                  </div>\n          <p className={s.desc}>Login-- {repo.owner.login}</p>\n          <a className={s.link}  rel=\"noopener noreferrer\" target=\"_blank\" href={repo.owner.url}>link </a>\n            <p className={s.desc}>{repo.html_url}</p>\n            <p className={s.desc}>Description-- {repo.description}</p>\n            <p className={s.desc}>Date: { repo.created_at.split('T').shift()}</p>\n\n        </div>\n      )}\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}