{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aleksandrbaran/Desktop/Repo/React/search_github/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/aleksandrbaran/Desktop/Repo/React/search_github/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Button from'@mui/material/Button';import s from'./InputField.module.css';import React,{useEffect}from'react';import{toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{useDispatch}from'react-redux';import*as actions from'../../redux/users/users-action';import{useSelector}from\"react-redux\";// import * as selectors from '../../redux/users/user-selector'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function InputField(){var dispatch=useDispatch();var _useSelector=useSelector(function(_ref){var repositories=_ref.repositories;return repositories.currentPage;}),totalCount=_useSelector.totalCount,currentPage=_useSelector.currentPage,perPage=_useSelector.perPage,repo=_useSelector.repo;var onChangeHandler=function onChangeHandler(e){dispatch(actions.setCurrentPage({perPage:perPage,totalCount:totalCount,currentPage:currentPage,repo:e.target.value}));};useEffect(function(){if(!repo)return;getData();},[currentPage]);var getData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var profile,profileJson;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://api.github.com/search/repositories?q=\".concat(repo,\"&per_page=\").concat(perPage,\"&page=\").concat(currentPage));case 2:profile=_context.sent;_context.next=5;return profile.json();case 5:profileJson=_context.sent;if(repo){_context.next=8;break;}return _context.abrupt(\"return\",toast.error('Please input repositories'));case 8:if(repo.trim()){_context.next=10;break;}return _context.abrupt(\"return\",toast.error('Please input repositories'));case 10:if(!(profileJson.items.length===0)){_context.next=12;break;}return _context.abrupt(\"return\",toast.warning('Please input repositories'));case 12:if(profileJson){dispatch(actions.fetchRepositoriesSuccess(profileJson));}case 13:case\"end\":return _context.stop();}}},_callee);}));return function getData(){return _ref2.apply(this,arguments);};}();var submitHandler=function submitHandler(e){e.preventDefault();getData();dispatch(actions.setCurrentPage());};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:s.header__search,children:/*#__PURE__*/_jsxs(\"form\",{className:s.form,onSubmit:function onSubmit(e){return submitHandler(e);},children:[/*#__PURE__*/_jsxs(\"label\",{className:s.label,children:[\"Name\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",autoComplete:\"off\",placeholder:\"Input GitHub repositories\",name:\"name\",pattern:\"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",title:\"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",required:true,onChange:onChangeHandler,value:repo,className:s.search__field})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Search\"})]})})});};","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/search_github/src/components/InputField/InputField.js"],"names":["Button","s","React","useEffect","toast","useDispatch","actions","useSelector","InputField","dispatch","repositories","currentPage","totalCount","perPage","repo","onChangeHandler","e","setCurrentPage","target","value","getData","fetch","profile","json","profileJson","error","trim","items","length","warning","fetchRepositoriesSuccess","submitHandler","preventDefault","header__search","form","label","search__field"],"mappings":"+QAAA,MAAOA,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,CAAP,KAAc,yBAAd,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,KAAT,KAAqB,gBAArB,CACA,MAAO,uCAAP,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,gCAAzB,CACA,OAASC,WAAT,KAA2B,aAA3B,CACA;6IAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CACrC,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CAEA,iBAAkDE,WAAW,CAAC,kBAAGG,CAAAA,YAAH,MAAGA,YAAH,OAAsBA,CAAAA,YAAY,CAACC,WAAnC,EAAD,CAA7D,CAAQC,UAAR,cAAQA,UAAR,CAAoBD,WAApB,cAAoBA,WAApB,CAAiCE,OAAjC,cAAiCA,OAAjC,CAAyCC,IAAzC,cAAyCA,IAAzC,CACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,CAAC,CAAI,CAC3BP,QAAQ,CAACH,OAAO,CAACW,cAAR,CAAuB,CAAEJ,OAAO,CAAPA,OAAF,CAAWD,UAAU,CAAVA,UAAX,CAAuBD,WAAW,CAAXA,WAAvB,CAAoCG,IAAI,CAAEE,CAAC,CAACE,MAAF,CAASC,KAAnD,CAAvB,CAAD,CAAR,CAEC,CAHH,CAIEhB,SAAS,CAAC,UAAM,CAChB,GAAI,CAACW,IAAL,CACE,OACAM,OAAO,GACR,CAJQ,CAIN,CAACT,WAAD,CAJM,CAAT,CAMA,GAAMS,CAAAA,OAAO,2FAAG,iLACQC,CAAAA,KAAK,wDAAiDP,IAAjD,sBAAkED,OAAlE,kBAAkFF,WAAlF,EADb,QACRW,OADQ,qCAEYA,CAAAA,OAAO,CAACC,IAAR,EAFZ,QAERC,WAFQ,kBAGTV,IAHS,yDAGIV,KAAK,CAACqB,KAAN,CAAY,2BAAZ,CAHJ,YAITX,IAAI,CAACY,IAAL,EAJS,0DAIWtB,KAAK,CAACqB,KAAN,CAAY,2BAAZ,CAJX,eAKVD,WAAW,CAACG,KAAZ,CAAkBC,MAAlB,GAA6B,CALnB,2DAK6BxB,KAAK,CAACyB,OAAN,CAAc,2BAAd,CAL7B,UAMd,GAAIL,WAAJ,CAAiB,CACff,QAAQ,CAACH,OAAO,CAACwB,wBAAR,CAAiCN,WAAjC,CAAD,CAAR,CACD,CARa,uDAAH,kBAAPJ,CAAAA,OAAO,2CAAb,CAUA,GAAMW,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACf,CAAD,CAAO,CAC3BA,CAAC,CAACgB,cAAF,GACAZ,OAAO,GACPX,QAAQ,CAACH,OAAO,CAACW,cAAR,EAAD,CAAR,CACD,CAJD,CAKE,mBACI,sCACI,YAAK,SAAS,CAAEhB,CAAC,CAACgC,cAAlB,uBACI,cAAM,SAAS,CAAEhC,CAAC,CAACiC,IAAnB,CAAyB,QAAQ,CAAE,kBAAClB,CAAD,QAAKe,CAAAA,aAAa,CAACf,CAAD,CAAlB,EAAnC,wBACJ,eAAO,SAAS,CAAEf,CAAC,CAACkC,KAApB,+BAEI,cACI,IAAI,CAAC,MADT,CAEI,YAAY,CAAC,KAFjB,CAGI,WAAW,CAAC,2BAHhB,CAII,IAAI,CAAC,MAJT,CAKI,OAAO,CAAC,wHALZ,CAMI,KAAK,CAAC,icANV,CAOI,QAAQ,KAPZ,CAQI,QAAQ,CAAEpB,eARd,CASI,KAAK,CAAED,IATX,CAUI,SAAS,CAAEb,CAAC,CAACmC,aAVjB,EAFJ,GADI,cAeA,KAAC,MAAD,EAAS,IAAI,CAAC,QAAd,oBAfA,GADJ,EADJ,EADJ,CAwBH","sourcesContent":["import Button from '@mui/material/Button';\nimport s from './InputField.module.css';\nimport React, { useEffect } from 'react';\nimport { toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action'\nimport { useSelector} from \"react-redux\";\n// import * as selectors from '../../redux/users/user-selector'\n\nexport default function InputField() {\nconst dispatch = useDispatch();\n\nconst { totalCount, currentPage, perPage,repo } = useSelector(({ repositories }) => repositories.currentPage);\nconst onChangeHandler = e => {\n  dispatch(actions.setCurrentPage({ perPage, totalCount, currentPage, repo: e.target.value }))\n  \n  };\n  useEffect(() => {\n  if (!repo)\n    return\n    getData()\n  }, [currentPage])\n\n  const getData = async () => {\n    const profile = await fetch(`https://api.github.com/search/repositories?q=${repo}&per_page=${perPage}&page=${currentPage}`);\n    const profileJson = await profile.json();\n    if (!repo) return toast.error('Please input repositories');\n    if (!repo.trim()) return toast.error('Please input repositories');\n    if (profileJson.items.length === 0) return toast.warning('Please input repositories');\n    if (profileJson) {\n      dispatch(actions.fetchRepositoriesSuccess(profileJson))\n    }\n  }\n  const submitHandler = (e) => {\n    e.preventDefault();\n    getData();\n    dispatch(actions.setCurrentPage())\n  }\n    return (\n        <>\n            <div className={s.header__search }>\n                <form className={s.form} onSubmit={(e)=>submitHandler(e)}>\n            <label className={s.label}>\n                Name\n                <input\n                    type=\"text\"\n                    autoComplete='off'       \n                    placeholder=\"Input GitHub repositories\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={onChangeHandler}\n                    value={repo}\n                    className={s.search__field} />\n                </label>\n                <Button  type=\"submit\">Search</Button>\n            </form>\n            </div>\n        \n        </>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}