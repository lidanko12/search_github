{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { addRepositoriesSuccess, deleteRepositoriesSuccess, fetchRepositoriesSuccess } from './users-action';\nimport { combineReducers } from \"redux\";\nconst items = createReducer([], {\n  [fetchRepositoriesSuccess]: (_, _ref) => {\n    let {\n      payload\n    } = _ref;\n    console.log(payload);\n  },\n  [deleteRepositoriesSuccess]: (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return state.filter(_ref3 => {\n      let {\n        id\n      } = _ref3;\n      return id !== payload;\n    });\n  },\n  [addRepositoriesSuccess]: (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    return [payload, ...state];\n  }\n});\nexport default combineReducers({\n  items\n});","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/redux/users/user-reducer.js"],"names":["createReducer","addRepositoriesSuccess","deleteRepositoriesSuccess","fetchRepositoriesSuccess","combineReducers","items","_","payload","console","log","state","filter","id"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAAQC,sBAAR,EAA+BC,yBAA/B,EAAyDC,wBAAzD,QAAwF,gBAAxF;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,KAAK,GAAGL,aAAa,CAAC,EAAD,EAAK;AAC5B,GAACG,wBAAD,GAA4B,CAACG,CAAD,WAAoB;AAAA,QAAhB;AAAEC,MAAAA;AAAF,KAAgB;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,GAH2B;AAI5B,GAACL,yBAAD,GAA6B,CAACQ,KAAD;AAAA,QAAQ;AAACH,MAAAA;AAAD,KAAR;AAAA,WAC7BG,KAAK,CAACC,MAAN,CAAa;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aAAYA,EAAE,KAAKL,OAAnB;AAAA,KAAb,CAD6B;AAAA,GAJD;AAM5B,GAACN,sBAAD,GAAyB,CAACS,KAAD;AAAA,QAAQ;AAACH,MAAAA;AAAD,KAAR;AAAA,WAAsB,CAACA,OAAD,EAAU,GAAGG,KAAb,CAAtB;AAAA;AANG,CAAL,CAA3B;AAYA,eAAeN,eAAe,CAAC;AAC3BC,EAAAA;AAD2B,CAAD,CAA9B","sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\nimport {addRepositoriesSuccess,deleteRepositoriesSuccess,fetchRepositoriesSuccess} from './users-action';\nimport { combineReducers } from \"redux\";\n\nconst items = createReducer([], {\n    [fetchRepositoriesSuccess]: (_, { payload }) => {\n        console.log(payload)\n    },\n    [deleteRepositoriesSuccess]: (state, {payload}) =>\n    state.filter(({ id }) => id !== payload),\n    [addRepositoriesSuccess]:(state, {payload}) => [payload, ...state],\n});\n\n\n\n\nexport default combineReducers({\n    items,\n})"]},"metadata":{},"sourceType":"module"}