{"ast":null,"code":"import auth0 from 'auth0-js';\n\nclass Auth {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      redirectUri: process.env.REACT_APP_AUTH0_REDIRECT_URI,\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.getProfile = this.getProfile.bind(this);\n    this.loadSession = this.loadSession.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.signIn = this.signIn.bind(this);\n    this.signOut = this.signOut.bind(this);\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getProfile() {\n    return this.profile;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  isAuthenticated() {\n    return new Date().getTime() < this.expiresAt;\n  }\n\n  loadSession() {\n    return new Promise((resolve, reject) => {\n      // not returning from Auth0 (no hash)\n      if (!window.location.hash) {\n        this.auth0.checkSession({}, (err, authResult) => {\n          if (err) return reject(err);\n\n          if (!authResult || !authResult.idToken || !authResult.accessToken) {\n            return resolve(false);\n          }\n\n          this.setSession(authResult);\n          resolve(true);\n        });\n        return;\n      } // returning from Auth0\n\n\n      this.auth0.parseHash((err, authResult) => {\n        if (err) return reject(err); // clear hash\n\n        window.history.replaceState(null, null, ' ');\n        this.setSession(authResult);\n        resolve(true);\n      });\n    });\n  }\n\n  setSession(authResult) {\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.profile = authResult.idTokenPayload; // set the time that the id token will expire at\n\n    this.expiresAt = authResult.expiresIn * 1000 + new Date().getTime();\n  }\n\n  signIn() {\n    this.auth0.authorize();\n  }\n\n  signOut() {\n    // clear id token, profile, and expiration\n    this.auth0.logout({\n      returnTo: process.env.REACT_APP_AUTH0_REDIRECT_URI,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID\n    });\n  }\n\n}\n\nconst auth0Client = new Auth();\nexport default auth0Client;","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/pages/Auth.js"],"names":["auth0","Auth","constructor","WebAuth","domain","process","env","REACT_APP_AUTH0_DOMAIN","clientID","REACT_APP_AUTH0_CLIENT_ID","redirectUri","REACT_APP_AUTH0_REDIRECT_URI","responseType","scope","getProfile","bind","loadSession","isAuthenticated","signIn","signOut","getAccessToken","accessToken","profile","getIdToken","idToken","Date","getTime","expiresAt","Promise","resolve","reject","window","location","hash","checkSession","err","authResult","setSession","parseHash","history","replaceState","idTokenPayload","expiresIn","authorize","logout","returnTo","auth0Client"],"mappings":"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","sourcesContent":["import auth0 from 'auth0-js';\n\nclass Auth {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      redirectUri: process.env.REACT_APP_AUTH0_REDIRECT_URI,\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n\n    this.getProfile = this.getProfile.bind(this);\n    this.loadSession = this.loadSession.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.signIn = this.signIn.bind(this);\n    this.signOut = this.signOut.bind(this);\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getProfile() {\n    return this.profile;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  isAuthenticated() {\n    return new Date().getTime() < this.expiresAt;\n  }\n\n  loadSession() {\n    return new Promise((resolve, reject) => {\n      // not returning from Auth0 (no hash)\n      if (!window.location.hash) {\n        this.auth0.checkSession({}, (err, authResult) => {\n          if (err) return reject(err);\n          if (!authResult || !authResult.idToken || !authResult.accessToken) {\n            return resolve(false);\n          }\n          this.setSession(authResult);\n          resolve(true);\n        });\n        return;\n      }\n\n      // returning from Auth0\n      this.auth0.parseHash((err, authResult) => {\n        if (err) return reject(err);\n        // clear hash\n        window.history.replaceState(null, null, ' ');\n        this.setSession(authResult);\n        resolve(true);\n      });\n    })\n  }\n\n  setSession(authResult) {\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.profile = authResult.idTokenPayload;\n    // set the time that the id token will expire at\n    this.expiresAt = authResult.expiresIn * 1000 + new Date().getTime();\n  }\n\n  signIn() {\n    this.auth0.authorize();\n  }\n\n  signOut() {\n    // clear id token, profile, and expiration\n    this.auth0.logout({\n      returnTo: process.env.REACT_APP_AUTH0_REDIRECT_URI,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n    });\n  }\n}\n\nconst auth0Client = new Auth();\n\nexport default auth0Client;"]},"metadata":{},"sourceType":"module"}