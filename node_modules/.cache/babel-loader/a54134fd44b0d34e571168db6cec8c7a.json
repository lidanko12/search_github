{"ast":null,"code":"import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { addRepositoriesSuccess, deleteRepositoriesSuccess, fetchRepositoriesSuccess, setCurrentPage, setClearCurrentPage } from './users-action';\nimport { combineReducers } from \"redux\";\nconst initialState = {\n  repo: '',\n  perPage: 12,\n  currentPage: 1,\n  totalCount: 500\n};\nconst items = createReducer([], {\n  [fetchRepositoriesSuccess]: (_, _ref) => {\n    let {\n      payload\n    } = _ref;\n    return [...payload];\n  },\n  [deleteRepositoriesSuccess]: (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return state.filter(_ref3 => {\n      let {\n        id\n      } = _ref3;\n      return id !== payload;\n    });\n  },\n  [addRepositoriesSuccess]: (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    return [payload, ...state];\n  }\n});\nconst currentPage = createReducer(initialState, {\n  [setCurrentPage]: (_, _ref5) => {\n    let {\n      payload\n    } = _ref5;\n    return payload;\n  },\n  [setClearCurrentPage]: () => initialState\n});\nexport default combineReducers({\n  items,\n  currentPage\n});","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/search_github/src/redux/users/user-reducer.js"],"names":["createAction","createReducer","addRepositoriesSuccess","deleteRepositoriesSuccess","fetchRepositoriesSuccess","setCurrentPage","setClearCurrentPage","combineReducers","initialState","repo","perPage","currentPage","totalCount","items","_","payload","state","filter","id"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AACA,SAAQC,sBAAR,EAA+BC,yBAA/B,EAAyDC,wBAAzD,EAAmFC,cAAnF,EAAkGC,mBAAlG,QAA4H,gBAA5H;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC,EADY;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,WAAW,EAAE,CAHI;AAIjBC,EAAAA,UAAU,EAAC;AAJM,CAArB;AASA,MAAMC,KAAK,GAAGZ,aAAa,CAAC,EAAD,EAAI;AAC3B,GAACG,wBAAD,GAA4B,CAACU,CAAD;AAAA,QAAI;AAAEC,MAAAA;AAAF,KAAJ;AAAA,WAAoB,CAAC,GAAGA,OAAJ,CAApB;AAAA,GADD;AAG3B,GAACZ,yBAAD,GAA6B,CAACa,KAAD;AAAA,QAAQ;AAACD,MAAAA;AAAD,KAAR;AAAA,WAC7BC,KAAK,CAACC,MAAN,CAAa;AAAA,UAAC;AAACC,QAAAA;AAAD,OAAD;AAAA,aAAWA,EAAE,KAAKH,OAAlB;AAAA,KAAb,CAD6B;AAAA,GAHF;AAK3B,GAACb,sBAAD,GAA0B,CAACc,KAAD;AAAA,QAAQ;AAAED,MAAAA;AAAF,KAAR;AAAA,WAAwB,CAACA,OAAD,EAAU,GAAGC,KAAb,CAAxB;AAAA;AALC,CAAJ,CAA3B;AAOA,MAAML,WAAW,GAAGV,aAAa,CAACO,YAAD,EAAe;AAC5C,GAACH,cAAD,GAAkB,CAACS,CAAD;AAAA,QAAI;AAAEC,MAAAA;AAAF,KAAJ;AAAA,WAAoBA,OAApB;AAAA,GAD0B;AAE5C,GAACT,mBAAD,GAAsB,MAAKE;AAFiB,CAAf,CAAjC;AAOA,eAAeD,eAAe,CAAC;AAC3BM,EAAAA,KAD2B;AAE3BF,EAAAA;AAF2B,CAAD,CAA9B","sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport {addRepositoriesSuccess,deleteRepositoriesSuccess,fetchRepositoriesSuccess, setCurrentPage,setClearCurrentPage} from './users-action';\nimport { combineReducers } from \"redux\";\n\nconst initialState = {\n    repo:'',\n    perPage: 12,\n    currentPage: 1,\n    totalCount:500,\n\n};\n\n\nconst items = createReducer([],{\n    [fetchRepositoriesSuccess]: (_, { payload }) => [...payload]\n    ,\n    [deleteRepositoriesSuccess]: (state, {payload}) =>\n    state.filter(({id} ) => id !== payload),\n    [addRepositoriesSuccess]: (state, { payload }) => [payload, ...state],\n});\nconst currentPage = createReducer(initialState, {\n    [setCurrentPage]: (_, { payload }) => payload,\n    [setClearCurrentPage]:()=> initialState,\n    \n})\n\n\nexport default combineReducers({\n    items,\n    currentPage,\n    \n})"]},"metadata":{},"sourceType":"module"}