{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/pages/MainPage.js\";\n// import React, { useState, useEffect } from 'react';\n// import { useSpring, animated } from 'react-spring'\n// export default function MainPage() {\n// \tconst [isLoading, setIsLoading] = useState(true);\n// \tconst styles = useSpring({\n// \t\tloop: true,\n// \t\tto: [\n// \t\t\t{ opacity: 1, color: '#ffaaee' },\n// \t\t\t{ opacity: 0, color: 'rgb(14,26,19)' },\n// \t\t],\n// \t\tfrom: { opacity: 0, color: 'red' },\n// \t})\n// \tuseEffect(() => {\n// \t\t// Wait for 3 seconds\n// \t\tsetTimeout(() => {\n// \t\t\tsetIsLoading(false);\n// \t\t}, 3000);\n// \t}, []);\n// \t// ...\n// \treturn {!!isLoading && <animated.div style={styles}>Baran Alexander</animated.div>\n// }\n// }\nimport React, { Component } from 'react';\nimport auth0Client from './Auth'; // import './splash-screen.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoadingMessage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"splash-screen\",\n    children: [\"Wait a moment while we load your app.\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-dot\",\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LoadingMessage;\n\nfunction withSplashScreen(WrappedComponent) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true\n      };\n    }\n\n    async componentDidMount() {\n      try {\n        await auth0Client.loadSession();\n        setTimeout(() => {\n          this.setState({\n            loading: false\n          });\n        }, 1500);\n      } catch (err) {\n        console.log(err);\n        this.setState({\n          loading: false\n        });\n      }\n    }\n\n    render() {\n      // while checking user session, show \"loading\" message\n      if (this.state.loading) return LoadingMessage(); // otherwise, show the desired route\n\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this);\n    }\n\n  };\n}\n\nexport default withSplashScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingMessage\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/pages/MainPage.js"],"names":["React","Component","auth0Client","LoadingMessage","withSplashScreen","WrappedComponent","constructor","props","state","loading","componentDidMount","loadSession","setTimeout","setState","err","console","log","render"],"mappings":";AAAA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,QAAxB,C,CACA;;;;AAEA,SAASC,cAAT,GAA0B;AACxB,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,qEAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAPQA,c;;AAST,SAASC,gBAAT,CAA0BC,gBAA1B,EAA4C;AAC1C,SAAO,cAAcJ,SAAd,CAAwB;AAC7BK,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACXC,QAAAA,OAAO,EAAE;AADE,OAAb;AAGD;;AAEsB,UAAjBC,iBAAiB,GAAG;AACxB,UAAI;AACF,cAAMR,WAAW,CAACS,WAAZ,EAAN;AACAC,QAAAA,UAAU,CAAC,MAAM;AACf,eAAKC,QAAL,CAAc;AACZJ,YAAAA,OAAO,EAAE;AADG,WAAd;AAGD,SAJS,EAIP,IAJO,CAAV;AAKD,OAPD,CAOE,OAAOK,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKD,QAAL,CAAc;AACZJ,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF;;AAEDQ,IAAAA,MAAM,GAAG;AACP;AACA,UAAI,KAAKT,KAAL,CAAWC,OAAf,EAAwB,OAAON,cAAc,EAArB,CAFjB,CAIP;;AACA,0BAAO,QAAC,gBAAD,OAAsB,KAAKI;AAA3B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AA9B4B,GAA/B;AAgCD;;AAED,eAAeH,gBAAf","sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// import { useSpring, animated } from 'react-spring'\n\n// export default function MainPage() {\n// \tconst [isLoading, setIsLoading] = useState(true);\n\n// \tconst styles = useSpring({\n\t\n// \t\tloop: true,\n// \t\tto: [\n// \t\t\t{ opacity: 1, color: '#ffaaee' },\n// \t\t\t{ opacity: 0, color: 'rgb(14,26,19)' },\n// \t\t],\n// \t\tfrom: { opacity: 0, color: 'red' },\n// \t})\n// \tuseEffect(() => {\n\n// \t\t// Wait for 3 seconds\n// \t\tsetTimeout(() => {\n// \t\t\tsetIsLoading(false);\n// \t\t}, 3000);\n// \t}, []);\n\n// \t// ...\n// \treturn {!!isLoading && <animated.div style={styles}>Baran Alexander</animated.div>\n// }\n// }\n\nimport React, {Component} from 'react';\nimport auth0Client from './Auth'\n// import './splash-screen.css';\n\nfunction LoadingMessage() {\n  return (\n    <div className=\"splash-screen\">\n      Wait a moment while we load your app.\n      <div className=\"loading-dot\">.</div>\n    </div>\n  );\n}\n\nfunction withSplashScreen(WrappedComponent) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true,\n      };\n    }\n\n    async componentDidMount() {\n      try {\n        await auth0Client.loadSession();\n        setTimeout(() => {\n          this.setState({\n            loading: false,\n          });\n        }, 1500)\n      } catch (err) {\n        console.log(err);\n        this.setState({\n          loading: false,\n        });\n      }\n    }\n\n    render() {\n      // while checking user session, show \"loading\" message\n      if (this.state.loading) return LoadingMessage();\n\n      // otherwise, show the desired route\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n}\n\nexport default withSplashScreen;\n"]},"metadata":{},"sourceType":"module"}