{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/search_github/src/components/InputField/InputField.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@mui/material/Button';\nimport s from './InputField.module.css';\nimport React, { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action';\nimport { useSelector } from \"react-redux\"; // import * as selectors from '../../redux/users/user-selector'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InputField() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    totalCount,\n    currentPage,\n    perPage,\n    repo\n  } = useSelector(_ref => {\n    let {\n      repositories\n    } = _ref;\n    return repositories.currentPage;\n  });\n  let page = currentPage;\n\n  const onChangeHandler = e => {\n    dispatch(actions.setCurrentPage({\n      perPage,\n      totalCount,\n      currentPage,\n      repo: e.target.value\n    }));\n  };\n\n  useEffect(() => {\n    if (!repo) return;\n    getData();\n    page = 1;\n  }, [page]);\n\n  const getData = async () => {\n    const profile = await fetch(`https://api.github.com/search/repositories?q=${repo}&per_page=${perPage}&page=${currentPage}`);\n    const profileJson = await profile.json();\n    if (!repo) return toast.error('Please input repositories');\n    if (!repo.trim()) return toast.error('Please input repositories');\n    if (profileJson.items.length === 0) return toast.warning('Please input repositories');\n\n    if (profileJson) {\n      dispatch(actions.fetchRepositoriesSuccess(profileJson));\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    getData();\n    dispatch(actions.setCurrentPage());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.header__search,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: s.form,\n        onSubmit: e => submitHandler(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            autoComplete: \"off\",\n            placeholder: \"Input GitHub repositories\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n            required: true,\n            onChange: onChangeHandler,\n            value: repo,\n            className: s.search__field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(InputField, \"EruwuOECKmXWaGKherNnWmDiPg4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = InputField;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/search_github/src/components/InputField/InputField.js"],"names":["Button","s","React","useEffect","toast","useDispatch","actions","useSelector","InputField","dispatch","totalCount","currentPage","perPage","repo","repositories","page","onChangeHandler","e","setCurrentPage","target","value","getData","profile","fetch","profileJson","json","error","trim","items","length","warning","fetchRepositoriesSuccess","submitHandler","preventDefault","header__search","form","label","search__field"],"mappings":"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","sourcesContent":["import Button from '@mui/material/Button';\nimport s from './InputField.module.css';\nimport React, { useEffect } from 'react';\nimport { toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action'\nimport { useSelector} from \"react-redux\";\n// import * as selectors from '../../redux/users/user-selector'\n\nexport default function InputField() {\nconst dispatch = useDispatch();\n\nconst { totalCount, currentPage, perPage,repo } = useSelector(({ repositories }) => repositories.currentPage);\n  let page = currentPage;\nconst onChangeHandler = e => {\n    dispatch(actions.setCurrentPage({perPage,totalCount,currentPage,repo:e.target.value}))\n  };\n  useEffect(() => {\n  if (!repo)\n            return\n    getData()  \n    page = 1;\n  }, [page])\n\n  const getData = async () => {\n    const profile = await fetch(`https://api.github.com/search/repositories?q=${repo}&per_page=${perPage}&page=${currentPage}`);\n    const profileJson = await profile.json();\n    if (!repo) return toast.error('Please input repositories');\n    if (!repo.trim()) return toast.error('Please input repositories');\n    if (profileJson.items.length === 0) return toast.warning('Please input repositories');\n    if (profileJson) {\n      dispatch(actions.fetchRepositoriesSuccess(profileJson))\n    }\n  }\n  const submitHandler = (e) => {\n    e.preventDefault();\n    getData();\n    dispatch(actions.setCurrentPage())\n  }\n    return (\n        <>\n            <div className={s.header__search }>\n                <form className={s.form} onSubmit={(e)=>submitHandler(e)}>\n            <label className={s.label}>\n                Name\n                <input\n                    type=\"text\"\n                    autoComplete='off'       \n                    placeholder=\"Input GitHub repositories\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={onChangeHandler}\n                    value={repo}\n                    className={s.search__field} />\n                </label>\n                <Button  type=\"submit\">Search</Button>\n            </form>\n            </div>\n        \n        </>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}