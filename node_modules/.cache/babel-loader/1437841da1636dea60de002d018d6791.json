{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MainPage() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Wait for 3 seconds\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 3000);\n  }, []); // Custom css for loader\n\n  const override = `\ndisplay: block;\nmargin: 0 auto;\nborder-color: red;\n`;\n  return isLoading ?\n  /*#__PURE__*/\n  // If page is still loading then splash screen\n  _jsxDEV(\"h1\", {\n    className: \"App\",\n    children: \"This is Main Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 2\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(MainPage, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n\n_c = MainPage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/aleksandrbaran/Desktop/Repo/React/my_project/src/pages/MainPage.js"],"names":["React","useState","useEffect","MainPage","isLoading","setIsLoading","setTimeout","override"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,IAAD,CAA1C;AAEJC,EAAAA,SAAS,CAAC,MAAM;AAEf;AACAI,IAAAA,UAAU,CAAC,MAAM;AACjBD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACC,KAFS,EAEP,IAFO,CAAV;AAGA,GANQ,EAMN,EANM,CAAT,CAHmC,CAWnC;;AACA,QAAME,QAAQ,GAAI;AAClB;AACA;AACA;AACA,CAJA;AAMA,SAAOH,SAAS;AAAA;AAEf;AAEA;AAAI,IAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJe,gBAML,qCANX;AAQC;;GA1BuBD,Q;;KAAAA,Q;AA0BvB","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nexport default function MainPage() {\n    const [isLoading, setIsLoading] = useState(true);\n\nuseEffect(() => {\n\n\t// Wait for 3 seconds\n\tsetTimeout(() => {\n\tsetIsLoading(false);\n\t}, 3000);\n}, []);\n\n// Custom css for loader\nconst override = `\ndisplay: block;\nmargin: 0 auto;\nborder-color: red;\n`;\n\nreturn isLoading ?\n\n\t// If page is still loading then splash screen\n    \n\t<h1 className=\"App\">\n\tThis is Main Page\n    </h1> :<></>\n    \n};\n\n\n"]},"metadata":{},"sourceType":"module"}