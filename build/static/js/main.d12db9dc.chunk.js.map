{"version":3,"sources":["components/RepoCard/RepoCard.module.css","components/List/List.module.css","components/Layout/Layout.module.css","components/Form/Form.module.css","components/RepoCard/RepoCard.js","pages/MoreInformation.js","redux/users/user-selector.js","components/List/List.js","redux/users/users-action.js","components/Form/Form.js","pages/SearchPage.js","pages/MainPage.js","components/FavoriteCard/FavoriteCard.js","pages/FavoritePage.js","components/Layout/Layout.js","App.js","reportWebVitals.js","redux/users/user-reducer.js","redux/store/store.js","index.js"],"names":["module","exports","RepoCard","useState","repo","setRepo","id","useParams","useEffect","a","fetch","fetchRepo","json","repoJson","className","s","container","name","thumb","src","owner","avatar_url","alt","login","desc","link","rel","target","href","url","html_url","description","created_at","split","shift","MoreInfo","getState","state","repositories","items","List","useSelector","selectors","list","map","item","img","stargazers_count","cont","to","Button","variant","type","fetchRepositoriesSuccess","createAction","payload","addRepositoriesSuccess","deleteRepositoriesSuccess","setCurrentPage","Form","props","pages","dispatch","useDispatch","parseInt","location","currentPage","count","setCount","getData","profile","profileJson","total_count","toast","error","trim","length","warning","actions","form","onSubmit","e","preventDefault","submitHandler","label","placeholder","pattern","title","required","onChange","value","input","Stack","spacing","Pagination","Math","ceil","page","_","num","showFirstButton","showLastButton","sx","marginY","marginX","renderItem","PaginationItem","component","NavLink","transition","Zoom","autoClose","SearchPage","console","log","MainPage","isLoading","setIsLoading","setTimeout","FavoriteCard","handleClose","onClick","FavoritePage","Layout","App","path","element","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","filter","perPage","totalCount","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","repoPersistConfig","key","storage","store","configureStore","reducer","persistReducer","devTools","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d12db9dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RepoCard_container__74Ri_\",\"thumb\":\"RepoCard_thumb__3soKf\",\"desc\":\"RepoCard_desc__3KORb\",\"link\":\"RepoCard_link__3O_2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3ccy6\",\"item\":\"List_item__3ejfe\",\"img\":\"List_img__2mbeu\",\"cont\":\"List_cont__4pd3N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__1nNA4\",\"link\":\"Layout_link__38ltV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"input\":\"Form_input__2ESfd\",\"label\":\"Form_label__15SAE\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport s from './RepoCard.module.css'\n\nexport default function RepoCard() {\n  const [repo, setRepo] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      const fetchRepo = await fetch(\n        `https://api.github.com/repositories/${id}`\n      );\n      if (fetchRepo) {\n        const repoJson = await fetchRepo.json();\n        setRepo(repoJson);\n      }\n    })();\n  }, [id]);\n  return (\n    <>\n          {repo && (\n              \n        <div className={s.container}>\n                  <h2> Name {repo.name}</h2>\n                  <div className={s.thumb}>\n          <img src={repo.owner.avatar_url} alt={repo.owner.login}></img>\n                  </div>\n          <p className={s.desc}>Login {repo.owner.login}</p>\n          <a className={s.link}  rel=\"noopener noreferrer\" target=\"_blank\" href={repo.owner.url}>link </a>\n            <p className={s.desc}>{repo.owner.login}</p>\n            <p className={s.desc}>{repo.html_url}</p>\n                                    <p className={s.desc}>Description {repo.description}</p>\n            <p className={s.desc}>Date:{ repo.created_at.split('T').shift()}</p>\n\n        </div>\n      )}\n    </>\n  );\n}\n\n","\nimport RepoCard from '../components/RepoCard/RepoCard';\n\nexport default function MoreInfo() {\n    return (\n        <RepoCard/>\n    )\n}","\nexport const getState = (state) => state.repositories.items;\nexport const getPage = (state) => state.page.currentPage;\nexport const getCount = (state) => state.page.totalCount;\nexport const getPerPage = (state) => state.page.perPage;\n","import React,{useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector} from \"react-redux\";\nimport * as selectors from '../../redux/users/user-selector'\nimport s from './List.module.css'\nimport { Button } from \"@mui/material\";\nexport default function List() {\n    const repositories = useSelector(selectors.getState);\n    return (\n        <ul className={s.list}>{repositories.map((repo) => (<li key={repo.id} className={s.item} >\n            <img className={s.img} src={repo.owner.avatar_url} alt='dfsdf' />\n            <p className={s.name}>{repo.name}</p>\n            <p>{repo.stargazers_count}</p>\n            <div className={s.cont}>\n            <Link to={`/search/${repo.id}`}>View More</Link>\n            <Button  variant=\"outlined\" type='button'>Add to favorite</Button>\n            </div>\n        </li>))}\n        </ul>\n    );\n }\n ","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchRepositoriesRequest = createAction('user/fetchRepositoriesRequest');\nexport const fetchRepositoriesSuccess = createAction('user/fetchRepositoriesSuccess', ({items}) =>\n    ({payload:[...items]})\n);\nexport const fetchRepositoriesError = createAction('user/fetchRepositoriesError');\n\n// export const fetchRepositorieRequest = createAction('user/fetchRepositorieRequest');\n// export const fetchRepositorieSuccess = createAction('user/fetchRepositorieSuccess');\n// export const fetchRepositorieError = createAction('user/fetchRepositorieError');\n\nexport const addRepositoriesRequest = createAction('user/addRepositoriesRequest');\nexport const addRepositoriesSuccess = createAction('user/addRepositoriesSuccess',);\nexport const addRepositoriesError = createAction('user/addRepositoriesError');\n\n\nexport const deleteRepositoriesRequest = createAction('user/deleteRepositoriesRequest');\nexport const deleteRepositoriesSuccess = createAction('user/deleteRepositoriesSuccess');\nexport const deleteRepositoriesError = createAction('user/deleteRepositoriesError');\n\nexport const setCurrentPage = createAction('user/setCurrentPage');\n\n\n\n\n","\n\nimport ReactDOM from 'react-dom';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@mui/material/Button';\nimport s from './Form.module.css'\nimport React, { useState,useEffect } from 'react';\nimport List from '../List/List'\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/users/users-action'\nimport { useSelector} from \"react-redux\";\nimport * as selectors from '../../redux/users/user-selector'\nimport{Link as NavLink} from 'react-router-dom'\nimport {\n  Pagination,\n  PaginationItem,\n  Stack,\n} from \"@mui/material\";\n\n\nexport default function Form(props) {\n  \n  const pages = useSelector(selectors.getState);\n  // const [data, setData] = useState({});\n  const [repo, setRepo] = useState(\"\");\n  const dispatch = useDispatch();\n  const perPage = 12;\n  // parseInt(props.location.search?.split(\"=\")[1] || 1)\n  const [currentPage, setCurrentPage] = useState(parseInt(props.location?.split(\"=\")[1] || 1))\n    // parseInt(props.location.search?.split(\"=\")[1] || 1)\n  const [count, setCount] = useState(0);\n  const onChangeHandler = e => {\n    setRepo(e.target.value);\n  };\n  useEffect(() => {\n  if (!repo)\n            return\n    getData()  \n    \n  }, [currentPage])\n\n  const getData = async () => {\n    const profile = await fetch(`https://api.github.com/search/repositories?q=${repo}&per_page=${perPage}&page=${currentPage}`);\n    const profileJson = await profile.json();\n    setCount(profileJson.total_count)\n    if (!repo) return toast.error('Please input repositories');\n    if (!repo.trim()) return toast.error('Please input repositories');\n    if (profileJson.items.length === 0) return toast.warning('Please input repositories');\n    if (profileJson) {\n      dispatch(actions.fetchRepositoriesSuccess(profileJson))\n      dispatch(actions.setCurrentPage(profileJson))\n    }\n  }\n  const submitHandler = (e) => {\n    e.preventDefault();\n    getData();\n  }\n  return (\n    <>\n        <form className={s.form} onSubmit={(e)=>submitHandler(e)}>\n            <label className={s.label}>\n                Name\n                <input\n                    type=\"text\"\n                    placeholder=\"input GitHub user name\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n              onChange={onChangeHandler}\n                    value={repo}\n                    className={s.input} />\n                </label>\n                <Button  type=\"submit\">Search</Button>\n        </form>\n    <List />\n      <Stack spacing={2}>\n        {!!count && pages && (\n          <Pagination\n          count={Math.ceil(count/perPage)}\n          page={currentPage}\n          onChange={(_, num) => setCurrentPage(num)}\n          showFirstButton\n          showLastButton\n          sx={{ marginY: 3, marginX: \"auto\" }}\n          renderItem={(item) => (\n            <PaginationItem\n            component={NavLink}\n            to={`/search/?page=${item.page}`}\n            {...item}\n            />\n            )}\n            />\n            )}\n          </Stack>\n            <ToastContainer transition={Zoom} autoClose={3000} />\n\n            </>\n) \n};\n","import Form from \"../components/Form/Form\";\n\n\nexport default function SearchPage(props) {\n    console.log()\n    return (\n        <>\n            <Form />\n       </>     \n    )\n};\n","import React, { useState, useEffect } from 'react';\n\n\nexport default function MainPage() {\n    const [isLoading, setIsLoading] = useState(true);\n\nuseEffect(() => {\n\n\t// Wait for 3 seconds\n\tsetTimeout(() => {\n\tsetIsLoading(false);\n\t}, 3000);\n}, []);\n\n// Custom css for loader\nconst override = `\ndisplay: block;\nmargin: 0 auto;\nborder-color: red;\n`;\n\nreturn isLoading ?\n\n\t// If page is still loading then splash screen\n    \n\t<h1 className=\"App\">\n\tThis is Main Page\n    </h1> :<></>\n    \n};\n\n\n","import { useSelector, useDispatch } from \"react-redux\"\nimport * as actions from '../../redux/users/users-action'\nimport * as selectors from '../../redux/users/user-selector'\n\n\n\n\n\nexport default function FavoriteCard() {\n    const card  = useSelector(selectors.getState);\n    const dispatch = useDispatch()\n\n    const handleClose = (id) => {\n        dispatch(actions.deleteRepositoriesSuccess(id))\n        console.log(handleClose)\n    }\n    return <>\n        <button type='button' onClick={() => handleClose()}></button>\n        </>\n};\n","import { useState } from 'react-redux'\nimport FavoriteCard from '../components/FavoriteCard/FavoriteCard'\nexport default function FavoritePage() {\n    \n    return (\n        <>\n            <FavoriteCard />\n            </>\n    )\n    \n};\n","import { NavLink, Outlet } from 'react-router-dom'\nimport s from './Layout.module.css'\nexport default function Layout() {\n    return (\n        <>\n        <header className={s.container}>\n        <NavLink  className={s.link} to='/' >Main</NavLink>\n        <NavLink  className={s.link} to='/search' >Search</NavLink>\n        <NavLink  className={s.link} to='/favorite' >Favorite</NavLink>\n        </header>\n            <Outlet />\n        </>\n    ) \n};\n","\nimport './App.css';\nimport MoreInfo from './pages/MoreInformation';\nimport SearchPage from './pages/SearchPage';\nimport MainPage from './pages/MainPage';\nimport FavoritePage from './pages/FavoritePage';\nimport  Layout  from './components/Layout/Layout';\nimport {Routes,Route} from 'react-router-dom' \n\nfunction App() {\n  return (\n    <>\n      <Routes>\n        <Route path='/' element={<Layout />}>\n        <Route index element={<MainPage />} />\n          <Route path='search' element={<SearchPage />} />\n          <Route path='search/:id' element={<MoreInfo/>}/>\n        <Route path='favorite' element={<FavoritePage/>}/>\n      </Route>\n\n      </Routes>\n      </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport {addRepositoriesSuccess,deleteRepositoriesSuccess,fetchRepositoriesSuccess, setCurrentPage} from './users-action';\nimport { combineReducers } from \"redux\";\n\nconst initialState = {\n    perPage: 10,\n    currentPage: 1,\n    totalCount:500,\n\n};\n\n\nconst items = createReducer([],{\n    [fetchRepositoriesSuccess]: (_, { payload }) => [...payload]\n    ,\n    [deleteRepositoriesSuccess]: (state, {payload}) =>\n    state.filter(({id} ) => id !== payload),\n    [addRepositoriesSuccess]: (state, { payload }) => [payload, ...state],\n});\nconst currentPage = createReducer(initialState, {\n    [setCurrentPage]:(_,{payload})=>[payload],\n    \n})\n\n\nexport default combineReducers({\n    items,\n    currentPage,\n    \n})","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport combineReducers from '../users/user-reducer'\nimport logger from 'redux-logger';\nimport storage from \"redux-persist/lib/storage\";\nimport { currentPage } from \"../users/user-reducer\";\n\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const authPersistConfig = {\n//     key: 'auth',\n//     storage,\n//     whitelist: ['token'],\n// };\n\nconst repoPersistConfig = {\n  key: \"items\",\n  storage,\n}\n\nexport const store = configureStore({\n  reducer: {\n    repositories: persistReducer(repoPersistConfig, combineReducers),\n  },\n  middleware,\n  devTools: true,\n});\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {store,persistor} from './redux/store/store';\nimport { PersistGate } from 'redux-persist/es/integration/react'\nimport {BrowserRouter} from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n        <App />\n        </BrowserRouter>\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}